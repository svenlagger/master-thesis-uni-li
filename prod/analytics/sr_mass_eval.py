from __future__ import annotations

import logging
import math
import pathlib
import time
from typing import Callable, Dict, List, Sequence, Tuple

import numpy as np
import pandas as pd
from scipy import stats
from sdmetrics.single_column import KSComplement

import thesis_utils  # your helper module


credit_score_cleaned = ["(sqrt((x3 * x2) + (x4 / 0.6024535)) * 1.0984987) + sqrt(abs((x0 - x1) - (x5 * 0.024582947)))", 
                        "sqrt(abs((x0 - x1) - (x5 * 0.024891557))) + (sqrt(x4 + (x3 * x2)) / 0.83834755)", 
                        "sqrt(x2 * abs(3.4227533 - x3)) + (sqrt((x5 * 0.01769847) - ((((x1 * -0.6779308) - x4) - abs(x0 - sqrt(x5))) * 2.7100651)) + -2.468256)",
                        "(((x2 + x3) + (0.19770777 * (x1 + abs(sqrt(x5) - x0)))) * 0.5078749) + sqrt(x4)",
                        "sqrt(abs(x1)) + (abs((sqrt(x5) - abs(x0 - x3)) * 0.15085785) + ((x3 + (x4 + x2)) * 0.22992773))",
                        "((sqrt(abs(x1 + x4)) + abs((sqrt(x5) - abs(x0 - x3)) * -0.15657462)) + abs(((x2 + x3) * 0.28658304) + -1.4015193)) + sqrt(x2)",
                        "abs((sqrt(x5) - abs(x3 - x0)) * 0.14726542) - (sqrt((x4 + x1) + (x3 * x2)) * -1.2382098)",
                        "abs((sqrt(x5) - abs((x0 - x3) * -1.1438425)) * -0.15049066) - ((x4 * -0.17563143) - sqrt((x1 + 7.6343155) + (x2 * x3)))",
                        "abs(((x4 * -0.14906333) - sqrt(((x2 + x1) / 0.758314) + ((x2 * x3) + 8.736256))) - abs((abs(sqrt(x5) - abs(x0 - x3)) * 0.16675252) - 1.2425838))",
                        "sqrt(x4 + abs(x0 - (x5 * 0.035945095))) + sqrt(abs(x1 + (x3 * x2)))",
                        "sqrt(abs((x4 + (x3 * x2)) + (x1 - 19.469517))) + sqrt(x4 + abs((x5 * 0.034405578) + (x3 - x0)))",
                        "sqrt(abs(x1 + ((x4 - ((-2.2120645 - (x3 * 0.8117871)) * x2)) - x0))) + sqrt(x4 + abs(x3 + ((x5 * 0.031122861) - x0)))",
                        "sqrt(x4 + abs(x0 - ((x5 * 0.029505527) + x1))) + ((x2 + x3) / 1.8716761)",
                        "(((x2 + x3) + (x1 * 0.19471076)) / 2.2878578) + sqrt(x4 + abs(((0.030752135 * x5) + x3) - x0))",
                        "(((x1 * 0.20648585) + (x3 + (x2 + 2.470047))) / 2.7898083) + sqrt(abs(((x4 + x3) - x0) + abs((x5 * 0.03497943) + (x2 - x0))) + x4)",
                        "sqrt((((x3 * x3) + x1) + abs(x0 - (x5 * 0.05195619))) + (x4 * x2))",
                        "sqrt(((x4 * x2) + abs((x3 * sqrt(x5 * 0.17050536)) - ((x0 - abs(x1)) * 2.7541032))) + 14.768703)",
                        "sqrt(((((x0 * -2.7318544) + (x1 * 1.6044751)) + sqrt(x3 * x5)) + abs(sqrt(x3 * x5) - abs((x0 * 3.9675603) - x1))) + (x2 * x4))",
                        "abs(((x0 * x0) - x5) * 0.0018370105) + sqrt(((x4 + x1) + (x3 * x2)) * 1.95211)",
                        "(sqrt(((x1 + (x2 * x3)) * 1.8793144) + (x4 * 4.111948)) - (x5 * -0.001614358)) - abs((x0 * 0.110898554) - 1.0998089)",
                        "(sqrt(((x3 * x3) + ((x1 + x0) * 2.5202274)) + (x4 * x2)) - abs((x0 + (x5 * -0.0037187396)) * 0.19857638)) + (x5 * 0.0011198043)",
                        "sqrt((x3 * x2) + x4) + sqrt(abs((x0 - x1) - (x5 / 33.516617)) + x4)",
                        "sqrt(abs((x5 / 33.516617) - abs(x0 - x3))) + sqrt(x4 + abs(((x4 + x1) * -1.550211) - ((x2 * x3) + -23.74451)))",
                        "sqrt(abs((x3 - x0) - (x5 / (-28.151525 - abs(x4 - x0))))) + sqrt(x4 + (x2 + abs(((x1 - x0) - (x4 * -1.807823)) + (x3 * x2))))",
                        "(((x2 + (x3 - -10.262905)) + (x5 * 0.0031685645)) * 0.451063) + ((x0 - (x4 + x1)) * -0.09875223)",
                        "sqrt(x4 + abs(x1)) + ((x2 * 0.52457285) + (abs((sqrt(x5) + ((x3 - x0) - 1.6202995)) * 0.13828847) - (x3 * -0.2864884)))",
                        "(((x2 * 0.5207092) - (x3 * -0.31066185)) + sqrt(x4 + abs(x1 - -1.1090229))) + abs(abs((sqrt(x5) * -0.16989402) + abs((x3 - x0) * 0.1769112)) + -1.2325133)",
                        "sqrt(sqrt(abs((x0 - (x3 * (x1 + x4))) * (x2 * sqrt(x5))) + 1864.974))",
                        "sqrt((sqrt(x3) * (x1 + abs(x0 - sqrt(x5)))) + sqrt(x2 * (((x5 * 0.10521368) + x4) * x4)))",
                        "sqrt(sqrt(sqrt(x5) * abs(log(x5) * (-4.800557 - (x4 * (3.0220711 - x3))))) + (sqrt(x2) * (abs(x0 - sqrt(x5)) + x1)))"]

credit_score_cleaned_denoised = ["sqrt(x4) + sqrt(abs((sqrt(x5 * x3) + -22.904955) - x0) + (x1 + ((x2 * 5.342908) + x3)))",
                                 "sqrt(x4) + sqrt((x1 + ((x2 + sqrt(x3)) * 4.9462442)) + abs(abs(sqrt(x3 * x5) - (x0 * 1.598409)) + -18.632607))",
                                 "sqrt(x4 + 4.209014) + sqrt(abs(abs((1.6262048 * x0) - sqrt(x3 * x5)) + -21.171625) + (((x2 * 3.447297) + (x2 - -1.547315)) + (x1 + abs(x3))))",
                                 "(abs((x2 - (((x0 * 0.2565806) + (x4 * -0.38708675)) - x3)) * 0.31506196) + sqrt(sqrt(x5) + x1)) + 2.5119042",
                                 "(sqrt((sqrt(x5) + abs((sqrt(x5) + -4.801535) - x0)) + x1) + ((x2 * 0.3427092) - (x4 * -0.11874713))) - (x3 * -0.29678997)",
                                 "(sqrt((sqrt(x5) + x1) + abs(sqrt(x5) + (x0 * -1.391421))) + (((x4 * -0.007411146) - -0.3756734) * abs(((x0 * 0.32698002) - x3) + ((x4 * -0.834274) - x2)))) + 0.95016044",
                                 "sqrt(abs(x0 + (x5 * -0.049423)) + (((x2 + x3) * 7.6991544) + ((x1 + x4) + x1)))",
                                 "sqrt(((x2 + (x3 + 2.2963562)) * 6.6144366) + abs(((((x1 + x4) + x4) - x0) * 1.9393951) - (x5 * -0.037488673)))",
                                 "sqrt((x1 + ((((x2 / 0.39295295) + x4) * 3.1315415) + 20.068354)) + abs((x1 - x0) + abs(-30.473742 - ((x0 + (x5 * -0.040521823)) - (x3 / 0.11236861)))))",
                                 "sqrt((sqrt(x2) * (x4 + x1)) + ((49.234386 + sqrt(x5 * x3)) - x0))",
                                 "sqrt((abs(((x0 - x3) * sqrt(x3)) - sqrt(x3 * x5)) + 50.836887) + (sqrt(x2) * (x4 + x1)))",
                                 "sqrt(((x1 + ((sqrt(x2) * (x3 + x4)) + 31.747347)) + abs(x0 - abs(sqrt(x5 * x3) - (x0 / 0.5815041)))) * 1.3117499)",
                                 "sqrt(sqrt(x5) + (x1 + 3.2702177)) + sqrt(abs(x2 * (x3 + (x0 * -0.09836911))) + x4)",
                                 "sqrt(x1 + sqrt(x5 + abs(((0.09010474 * x0) - x3) * (x5 + (x0 / -0.033747837))))) + sqrt(x2 + x4)",
                                 "sqrt(x4 + x3) + sqrt((sqrt(abs((x5 + (x0 / -0.05825755)) * ((0.13521716 * x0) - (x3 / 1.3728501)))) + x1) - (((x3 / x0) - x2) / 0.24224457))",
                                 "sqrt(((abs(x0 + (x5 * -0.032823253)) - ((-0.08762204 - sqrt(x2)) * (x1 + x4))) + sqrt(x5)) + (x3 * 7.350928))",
                                 "sqrt((x3 * 6.1593475) + (abs((x0 - ((x3 / 0.20194525) - (x5 * -0.025728762))) + x0) + (sqrt(x5) - ((x1 + (x4 * 1.6784769)) * (-0.79325604 * sqrt(x2))))))",
                                 "sqrt(((abs(((x5 * -0.027609799) + ((x0 + x0) - x2)) - ((x3 / 0.17720962) - 7.9010725)) + sqrt(x5)) + (x3 * 4.9689493)) - ((((x4 + x1) * -0.6458359) - x2) * sqrt(sqrt(x4) + x2)))",
                                 "sqrt(((x2 * 8.189413) + ((abs(x1) + x4) * 2.4991257)) + abs(x0 - sqrt(x3 * x5)))",
                                 "sqrt((((x1 + x4) + ((x3 + x2) * 2.465989)) * 2.1796126) + abs((x0 / 0.45902115) - sqrt(x3 * (x5 + x0))))",
                                 "sqrt(abs(x1 + (abs(sqrt(x5 * x3) + (x0 * -1.7297275)) - x0)) + ((x2 * x2) + ((x1 + 29.398314) + ((x4 + x3) * 2.4181702))))",
                                 "sqrt(x4 + abs((x0 + (x5 * -0.021502797)) - x1)) + (((x3 + x2) / 3.3682883) - -3.6446161)",
                                 "sqrt(abs((x0 + (x5 * -0.02072089)) - (x1 + x2)) + (x4 * 1.4296)) + (((x2 + x3) / 3.6515286) - -3.3027725)",
                                 "(((x2 / 4.219685) - -5.0332117) + (x5 * 0.0011474454)) + sqrt(abs(((x4 + x1) + ((x4 + ((x3 * x3) / 3.3042307)) - abs(x0 - x2))) * 0.7684216))",
                                 "(x3 + (sqrt(((x5 / 3.8789365) + (((x1 - x0) + x4) * 15.100435)) + 553.329) + x2)) * 0.30541545",
                                 "((x2 + abs(x3 + -2.1873605)) + sqrt((x5 / 3.917724) + (((abs(x1) + (x4 - x0)) * 15.380438) + 604.40485))) * 0.313488",
                                 "((x3 + (x2 + 4.8056374)) + sqrt(((x4 + x1) * 6.632738) + abs(((12.145105 - x3) * ((x1 - x0) + -3.59874)) - (x5 / -7.1811213)))) * 0.37546924",
                                 "sqrt((x3 * (x2 - -4.025479)) + (abs((x5 * 0.04283228) - x0) + ((x4 + x1) * 2.5944152)))",
                                 "sqrt((((x2 - -2.4697616) * x3) + (x1 * 1.9697939)) + (((x4 + 5.744445) * 2.901906) + abs(x0 - (x5 * 0.045296453))))",
                                 "sqrt(((x2 * sqrt(x4)) + (((x1 + (sqrt(x5) + (x3 * 3.1116533))) + abs((sqrt(x5) + -12.132172) - x0)) - x0)) / 0.45879763)"]

credit_score_cleaned_syn = ["sqrt(abs(x0 - ((x2 * x4) + (x1 * 1.980334))) + sqrt(x5 * x3))",
                            "sqrt(abs((((x0 - x1) * -2.422199) + (x2 * x2)) - (x4 * -4.4334636)) + sqrt(x5 * x3))",
                            "sqrt(abs((sqrt(x3 * x5) + (((x2 * x2) - x0) - (2.1101685 * (x0 - x1)))) - (x4 * -4.0777426)) - -25.026354)",
                            "sqrt((x1 + 15.432381) + ((x4 * x2) + abs(sqrt(x5 * x3) - x0)))",
                            "(sqrt(abs(sqrt(x5) - ((x0 - x1) + -6.073034))) + 3.1470282) + (sqrt(x2 * (x4 * x3)) / 5.569626)",
                            "6.2033277 + abs(sqrt(abs(sqrt(x5) - (-4.347676 + (x0 - abs(x1))))) + (-3.1135297 + (sqrt(x3 * (x2 * x4)) / 5.3950396)))",
                            "(((sqrt(x5) + (x4 + (x1 - (x0 - (x2 * 4.33333))))) + 37.668865) * 0.09736117) + sqrt(x3)",
                            "(abs(x2 + ((x3 - (x0 - x4)) + sqrt((x5 * 0.28335947) + abs(x0 * x1)))) * 0.23016971) + 5.5290704",
                            "0.22407947 * ((x2 + 23.197113) + abs((x3 - (x0 - (x2 + (x4 * 0.7649498)))) + sqrt(((x5 + x0) * 0.29368553) + abs((x0 * x1) - 23.197113))))",
                            "sqrt(sqrt(x3 * x5) + abs(x1 + (((x4 * x2) - x0) + x1)))",
                            "sqrt(abs((((abs(x1) - x0) * 2.250925) + sqrt(x5 * (x3 - -0.108809695))) + ((x4 * x2) * 0.8093315)) + 30.90638)",
                            "((x0 - x3) * -0.043474916) + sqrt(abs(((x4 * (x2 * 0.79649067)) + sqrt((x3 * x5) + x0)) + ((abs(x1) - x0) * 2.1175442)) + 45.448658)",
                            "sqrt(abs(((abs(x1) - x0) * 2.1755733) + (sqrt(x5 * x3) + (x2 * x4))) + 22.51524)",
                            "sqrt((abs((((x2 * x4) * 0.8128905) + sqrt(x3 * x5)) + (x1 - ((x0 + -7.4987044) / 0.3630864))) - -25.185837) + x1)",
                            "sqrt(x1 + (abs((x4 * ((x2 * 0.7301898) + sqrt(x3 / x0))) + (sqrt(x3 * x5) + (x1 - ((x0 + -5.1660852) / 0.40271053)))) - -24.953064))",
                            "sqrt(sqrt(x3 * x5) + abs((((x2 * x4) + x1) + x1) - x0))",
                            "sqrt(abs(((x4 * (x2 * 0.81672245)) + ((x1 - x0) * 2.2662745)) + sqrt(x5 * x3)) + 30.837633)",
                            "sqrt(abs(((x2 * x4) * 0.72950196) + (sqrt(x3 * ((x4 * x2) + x5)) + ((abs(x1) - x0) * sqrt(log(x5))))) + 33.1439)",
                            "sqrt(sqrt(x5 * x3) + abs(((x2 * x4) - (x1 * -1.980738)) - x0))",
                            "sqrt(abs((sqrt(x3 * x5) + ((x0 - x1) * -2.2637458)) - (x4 * (x2 * -0.81527686))) + 31.00304)",
                            "((x0 * -0.07715308) + sqrt(x0 + abs(((x2 * 0.71819776) * x4) + (((x0 - x1) * -1.9485556) + sqrt(x5 * x3))))) + 2.192661",
                            "sqrt((x1 + (sqrt(x5) + (x4 * (x2 * 0.31806237)))) * log((60.119404 / x0) + x3))",
                            "sqrt((abs((((x4 + x2) * 2.668637) + x1) + (x0 * -1.2649182)) + sqrt(x5)) * log(x3 + 2.8583066))",
                            "sqrt(x0 + abs(((sqrt(x5) + x1) + ((((x0 * -0.83555144) + x4) + (x2 * 2.4574573)) * 2.027469)) * log(x3 + 1.7733725)))",
                            "sqrt(sqrt(x3 * x5) + abs((x1 * 1.9806571) - (x0 - (x2 * x4))))",
                            "sqrt(x1 + sqrt(x5)) + abs((sqrt(sqrt((x2 * x4) * x3)) * 1.8228288) + (x0 * -0.12149218))",
                            "(sqrt(sqrt((x4 * (x3 * x2)) + x0)) * 1.8809571) + abs((x0 * -0.14346866) + sqrt(abs(x1) + sqrt(x5)))",
                            "sqrt(sqrt(x3 * x5) + abs(((x1 - x0) + x1) + (x2 * x4)))",
                            "sqrt(abs(((x4 * x2) + sqrt(x3 * x5)) + ((abs(x1) - x0) * 2.4156406)) + 42.888653) + -0.97029",
                            "sqrt(((abs(x1) + 53.299328) - x0) + abs(x0 - abs((((x2 * x4) / 1.2776719) + sqrt(x5 * x3)) + (x1 - x0))))"]

credit_score_cleaned_syn_denoised = ["(1.8596587 * sqrt(x3 + x2)) + sqrt(x4 + abs((x0 - sqrt(x5)) - x1))",
                                     "(sqrt(((x3 + x2) - -1.6787274) * 1.9943805) + sqrt(x4 + abs(x1 - (x0 - sqrt(x5))))) * 1.1035178",
                                     "sqrt((sqrt(x3) * x2) + 12.347061) + sqrt((x4 + 5.508762) + abs(((x5 * 0.01853198) + (x3 + x2)) - ((x0 - x4) - x1)))",
                                     "sqrt(((abs(x1) + (x3 * x2)) / (x0 + x4)) * x4) + (log(x5) + 1.4855604)",
                                     "log(abs(((x1 * (x2 * x4)) * x2) + 684.33203)) + sqrt(x3 / ((x0 + x3) * sqrt(0.20447616 / x5)))",
                                     "sqrt(x3 / (sqrt(0.20084475 / x5) * ((x0 + x3) + sqrt(x2)))) + log(abs(x4 * ((x1 + -3.6919346) * (x4 * (1.639946 - x2)))) + 665.29987)",
                                     "((x4 + (x3 - ((x0 - x1) * 0.29926232))) * 0.19407633) + (log(x5) + sqrt(x2))",
                                     "(abs(((x4 + (x2 + x3)) * 1.725624) - (x0 - (x1 * 0.5798402))) * 0.1034699) + (log(x5) - -2.4367297)",
                                     "log(x5 + 77.00676) + (abs(((x2 * 0.28226724) - ((x4 + x3) * -0.16338018)) - ((x0 * 0.10810179) - (x1 * 0.058861796))) - -2.182581)",
                                     "sqrt(abs(x1 - (x0 - ((x4 / 0.57302886) + ((x2 * x3) / 1.9395565))))) + log(x5)",
                                     "abs(((((((x0 - x3) - x4) - x2) / 0.48832926) - x1) * -0.065026835) - (sqrt(x5) * -0.08185032)) + 8.164412",
                                     "(((((x2 * -2.0156412) - x4) / 0.4315718) - x1) * -0.05537257) + ((((x0 - (x3 * 2.102151)) - sqrt(x5)) * -0.07876701) + 6.66432)",
                                     "(log(x5) - -3.0587187) * log(log(((x3 / x0) * (x1 + (x4 * x2))) + 11.893489))",
                                     "(log(log(((x2 * x3) * ((x1 + x4) / (x0 + x2))) + 23.195902)) * (log((x4 * 24.499332) + x5) - -5.6124535)) + -5.3230124",
                                     "(log(log(((x3 / (x0 + x2)) * ((x4 + x1) * (x2 - -1.1552321))) + 24.622206)) * (log(((x4 * sqrt(x2)) * (x4 + -5.62794)) + (x5 + 139.4594)) - -5.5033317)) + -5.714679",
                                     "sqrt(abs(x1) + (sqrt((x3 * (x2 * x4)) + (x5 / sqrt(x0))) / 0.17566547))",
                                     "sqrt(((sqrt(x5) + x1) * 1.5841299) + ((x2 * x3) + (((6.5642343 - (x0 * 0.18219288)) * x4) - -13.939165)))",
                                     "-1.7928722 + sqrt((((sqrt(x5 + x0) + x1) * 1.9485338) + ((x2 * x3) - -36.16892)) + (x4 * (7.6823463 - (0.21235164 * x0))))",
                                     "log((abs(x1 / (x0 - x2)) * (x5 * (x3 * (x2 * x4)))) + 4853.8887)",
                                     "log(abs(((x4 / (x2 - x0)) + 0.15566985) * ((5915.283 - abs(x3 * (x1 * x5))) * x3)) + 4838.8794)",
                                     "log((x4 * abs(((((x5 * x3) * abs(x1)) - 5677.032) / (x2 - x0)) * ((-1.3041015 - (x5 * -0.0017581913)) + x2))) + 3431.7983)",
                                     "(sqrt((x2 * 4.5608163) + (sqrt(x5) + x1)) - ((x0 * 0.08394334) - sqrt(x4))) + sqrt(x3)",
                                     "abs((x2 * 0.3066134) + (sqrt(x3) - ((x0 * 0.16341159) - sqrt(x4)))) + sqrt(x0 + (sqrt(x5) + x1))",
                                     "sqrt((x1 + x0) + (sqrt(x5) * 1.3579115)) + abs(((x2 * 0.2798208) + abs(0.6999337 - sqrt(x3))) - ((x0 * 0.1540136) - sqrt(x4)))",
                                     "sqrt(x4 + ((x3 * x2) / ((x3 + x0) / 15.329662))) + sqrt(x1 + sqrt(x5))",
                                     "(sqrt(x1 + (x4 + sqrt(x5))) + sqrt((x2 + 3.2014358) * (x3 / ((x0 + x3) / 5.609892)))) * 1.138067",
                                     "sqrt((x4 + x1) + sqrt(x5)) + sqrt(((x3 + 5.378305) * (sqrt(x4) + x2)) / sqrt(abs((x1 / x0) + (x0 + -2.255142))))",
                                     "log(((x3 * x2) / (x0 / x5)) + 75.553246) + sqrt(x4 + abs(x1))",
                                     "(sqrt(x2) - ((x1 * -0.05607433) + 3.4928036)) + (log((x4 * (x3 / (x0 / x5))) + 502.20172) / 0.6444729)",
                                     "(x1 * 0.052563336) + (((log(((x3 * (x2 + 0.66646475)) / ((x0 + x2) / x5)) + 303.95993) * 1.8219166) + sqrt(x4)) - 5.2949753)"]

air_quality_cleaned = ["(log(x0 / x2) * 16.251146) + 81.48848",
                       "143.53235 - (sqrt(log((((x2 + -0.0071225963) / x0) + 0.89813113) * 0.91711915)) * 64.21417)",
                       "(((x2 - -3.4157891) / ((x0 / 0.0009565923) + 12.114829)) + 146.76909) - (sqrt(log((x2 / x0) + 0.89121914)) * 65.16223)",
                       "-273.13992 + (5251.404 / abs(log((x0 - (-0.0026609043 / x2)) / (1.3936038e6 * x2))))",
                       "((5251.4033 / log((x2 * 1.3936038e6) / x0)) - (-0.23796314 / (x2 + abs(((0.1394129 - x0) / 0.02551524) + (1.3597212 / (x0 + -0.7283884)))))) + -273.14178",
                       "((5251.4033 / log((x2 * 1.3936038e6) / x0)) + -273.1417) - (-0.25017595 / (abs((1.7070732 / (x0 + -0.72837913)) - (x0 / 0.025520097)) + x2))",
                       "(log(x0 / (x2 - x0)) * 15.861143) - -79.587074",
                       "((x0 * (1176.7498 / ((x0 * 17.877716) + x2))) + 3.526069) - (x2 / (x0 / 0.065414116))",
                       "(((log(abs(x0 / x2)) * 0.9096999) + 23.253666) * log(x0 / x2)) + ((x0 - -94.69026) - abs(x0))",
                       "log(((115.79662 / x2) * x0) - -0.29558906) * 18.379454",
                       "((log(276.24756 / (x2 / x0)) * 13.417877) + (182.77531 / ((x2 / x0) + 8.624548))) + -8.411772",
                       "(log(85.50758 / ((x2 / x0) - 2.4120207)) * 12.871905) + ((-247.84148 / (-19.2846 - (x2 / (x0 - -0.0012582538)))) + 6.5200243)",
                       "(log((x2 / x0) + -3.714349) * -14.75807) + 74.2857",
                       "(((((x2 * -1.235701) / x0) - -186.14975) * sqrt(x2 * x0)) / (x2 + (x0 * 2.263304))) + 0.8022893",
                       "((x2 * (-1.2817526 / x0)) - -205.48474) * ((sqrt(x0 * (x2 + ((x0 * 16.30126) / (x2 / x0)))) / (((x0 + x0) * 1.9036807) + x2)) + -0.007092458)",
                       "1012.1699 / ((x2 / x0) - -10.125687)",
                       "(859.2204 / (sqrt((x2 / x0) + -5.6794353) + 7.4898214)) + -43.069633",
                       "(308.78635 / ((sqrt(x2 / (x0 * 8.90297)) + 2.8445575) - sqrt(x0 / ((x2 + x0) / 2.6805837)))) + -44.290577",
                       "(log(x0 / x2) * 16.251114) + 81.48837",
                       "((((-46.012486 / x2) * x0) + 13.366747) * log(x0 / x2)) + 66.33955",
                       "(69.56702 - (-0.005817354 / (x0 / x2))) + ((((-38.8101 / x2) * (x0 + 0.00087129016)) + 14.124599) * (log(x0 / x2) + 0.0003490922))",
                       "81.48848 - (log(x0 / x2) * -16.251146)",
                       "(sqrt(log(((x2 + -0.0072215907) / x0) + 0.7922554)) * -64.773766) + 146.01744",
                       "((((((x2 + 0.5420271) - (x0 * sqrt(x2))) * 1.4555984e-5) / x0) - sqrt(log(0.89142776 + (x2 / x0)))) * 65.1541) + 146.76265",
                       "(-2449.206 / (-34.980812 - (x2 / x0))) + -11.261068",
                       "((x0 / (x2 - (x0 * -22.119396))) * 1443.6534) + ((x2 / x0) * -0.04882366)",
                       "(-4.571207 - (x2 / (x0 / 0.038730692))) + ((x0 * -2171.71) / (((x0 * -93.8749) / (-3.751117 - (x2 / (x0 + x0)))) + ((x0 * -43.193295) - x2)))",
                       "(log(x0 / x2) * 16.251135) - -81.48847",
                       "(sqrt(sqrt(sqrt(x0 / x2))) * (206.99675 - ((x2 * 0.008406989) / (x0 + 0.009403459)))) + -109.03779",
                       "(-110.479416 - ((3.826536 * (x0 / (x2 + x0))) - (((x2 * -0.0026427275) + (0.049161088 / x2)) / x0))) + (209.26654 * sqrt(sqrt(sqrt(x0 / x2))))"]

air_quality_cleaned_denoised = ["(log((x2 / x0) + -1.6995438) * ((x2 * (log(x1) * (0.00063689746 / x0))) + -16.690178)) + 81.439125",
                                "((-16.457144 + ((x2 * ((log(x1) * 0.0010467478) - 0.0039351596)) / (x0 - 0.065701514))) * log((x2 / x0) + -1.9225441)) + 80.59291",
                                "(log(-1.5171038 + (x2 / x0)) * (-17.3065 - ((((54.21 * x0) - x2) / x1) / (sqrt(x0) * -0.19237095)))) + ((x2 * (0.046690088 / (-0.0049387473 + x0))) + 82.38917)",
                                "((209.58832 / sqrt(sqrt(sqrt(x2 / x0)))) + abs(0.507615 - ((x1 * 0.00027773727) / x0))) - 111.046745",
                                "abs((((x2 + (x1 + -211.66203)) * -0.00035166665) / x0) - -0.5550012) + ((209.74593 / sqrt(sqrt(sqrt(x2 / x0)))) - 111.14886)",
                                "(abs(-0.77020156 - (((x1 * -0.0001765954) + 0.02060846) / (x0 / sqrt(sqrt(x2))))) + (209.78441 / sqrt(sqrt(sqrt(((x0 * x0) * 0.08528239) + (x2 / x0)))))) - 111.17604",
                                "((((171.46237 / x2) + (52.973415 / (x0 - (x2 / -69.170235)))) * x0) - (-5.827552e-5 / (x0 / x1))) + -16.615665",
                                "((((171.68471 / x2) + (53.356895 / (x0 - ((x2 / -68.6083) + -0.010180509)))) * x0) + -16.593903) - ((x1 / (x0 / (x1 / x0))) * -4.872297e-8)",
                                "-16.689783 + ((((171.666 / x2) + (53.693356 / (((-0.9797702 - x2) / -69.074135) + x0))) * x0) - (((x1 - (447.2766 - (x2 / -0.15025112))) / (x0 * sqrt(x0 / x2))) * (log(x0) * 5.081705e-5)))",
                                "(log((-0.12518625 / x1) + (x0 / x2)) * (log((x0 - 0.017157342) / x2) + 23.876305)) + 95.7426",
                                "((log(abs(x0 / x2)) * (log((x0 - 0.094637364) / x2) + 24.025846)) - ((14.064351 / x0) / sqrt(x1))) + 96.2707",
                                "(((log((x0 - 0.09996982) / x2) + 24.03242) * log(x0 / x2)) - abs(((x0 * log(x2)) - (14.049571 / x0)) / sqrt(x1))) + 96.165794",
                                "abs((x1 * (-0.00029118222 / x0)) + 0.5342468) + ((x2 * (0.5533141 / (x0 * -9.231624))) + (((x0 * 418.49698) / ((x0 * 6.3357844) - (-4.170031 / (12.270903 / x2)))) + 2.481397))",
                                "(abs(0.6489021 + (((log(x2) / x2) + (x1 * -0.0004296762)) / x0)) + (2.4193504 + ((x2 * 0.55192614) / (-9.228547 * x0)))) + (418.4966 * (x0 / ((x0 * 6.358831) - (-4.149242 / (12.268849 / x2)))))",
                                "(abs((((2.3316717 / x2) + (x1 * -0.00038006948)) / x0) + 0.60764366) + ((x2 / (x0 * -9.292698)) * (((-0.00045805986 / x0) / (0.6236572 / x2)) + 0.7527451))) + (((x0 * -418.4961) / ((-4.551727 / (12.329994 / x2)) - (x0 * 6.4725695))) + 4.4998507)",
                                "(((3538.3352 / (x2 - (x0 * -67.56038))) + (171.8464 / x2)) * x0) - (((x2 / x1) / x0) + 15.85463)",
                                "((-177.39098 / (x0 * x1)) + -16.246466) + (((3538.367 / ((x2 - -2.9698954) - (x0 * -66.579094))) + (171.69041 / x2)) * abs(x0 + 0.029137973))",
                                "((((x2 / x1) * ((2.3212154 / x0) - 1.9704814)) * -2.7244682) + ((x0 + 0.031855572) * ((171.9621 / x2) + (3538.346 / ((x2 - (x0 * -66.57524)) + 3.6009798))))) + -16.25872",
                                "(((x2 / x0) * ((x1 * 1.6353579e-6) + 0.02428065)) + 81.73562) - (log((x2 / x0) + -1.6784973) * 16.877163)",
                                "(x2 * (0.030974712 / (x0 + -0.030586198))) + (82.58235 - (log((x2 / x0) + -1.4282148) * (abs(x2 / (x0 * x1)) + 17.106897)))",
                                "(((x2 / x1) + 1.932742) * (43.117764 - ((((x2 / x1) * 3.817308) / x0) + (log((x2 / x0) + -1.2962012) * 9.067075)))) + (0.043266773 * ((4.3403807 + x2) / x0))",
                                "(((x0 / (x2 + ((x0 * 72.632545) + -0.39465106))) - ((-0.051003035 / ((x2 - -0.65524) / x0)) - (-0.04951926 / x1))) * 3744.4888) + -16.62299",
                                "(x0 * (3632.2214 / (((x0 * 61.269726) + x2) - (x0 * ((139.94421 * x0) / x2))))) + (abs((0.00033041116 / (x0 / ((x1 + -201.92697) + (x2 * x0)))) + -0.5215497) + -15.953417)",
                                "((x0 * (3632.2214 / ((x2 + (x0 * 61.266277)) - (((x0 / x2) * 139.94427) * x0)))) + -15.941218) + abs((0.0003178567 / (x0 / (((x0 * x2) * log(x2)) + ((x1 + -199.97581) - sqrt(x1))))) + -0.5239053)",
                                "(sqrt(sqrt((-0.88010085 / x1) + sqrt((x0 + 0.0039272597) / x2))) * 208.88461) + -110.403595",
                                "((((log(x0) / x1) / 0.2778034) + sqrt(sqrt(sqrt((x0 + 0.03274237) / x2)))) * 208.62108) + -110.83427",
                                "(sqrt((log(x0) / ((x1 * 0.08464622) - (x2 * (log(x0) - x0)))) + sqrt(sqrt((x0 + 0.06493447) / (x2 + 0.22619402)))) * 209.1893) + -111.600685",
                                "(-12.936197 - (((x2 / 1.1999208) * sqrt(x2)) / (x1 * x0))) + ((x0 / ((x0 * ((-138.50342 / ((x2 - -0.78635603) / x0)) + 60.14285)) + (x2 * 1.1310202))) * 3507.5386)",
                                "(-13.076482 - ((sqrt(x2) * (x2 / 1.8123502)) / ((x1 * x0) - (x2 / 0.57911646)))) + (x0 * (3507.5393 / ((1.1301858 * x2) + (((-138.49802 / ((x2 - -0.96344715) / x0)) + 59.897877) * x0))))",
                                "(((log(x0) / (((-11934.781 * x0) / x1) - (-1.3722682 - x0))) - ((4.588352 / (x0 * x1)) * x2)) + ((x0 * 3507.5752) / ((x0 * ((-138.37563 / (x2 / x0)) + 59.382687)) + ((x2 * 1.0150827) - -0.61715)))) + -14.686993"]

air_quality_cleaned_syn = ["x1 / (sqrt(x1 + -328.88034) + (x2 / x0))",
                           "abs(((sqrt((x0 + -0.145981) * x1) * 0.56604874) + (x2 * -0.28002918)) + 11.810027)",
                           "((x2 * -0.15253562) + 10.755751) + (log(x2) / abs((((x2 * -4.8852963) / (x0 + -0.15201966)) / x1) + -0.07214852))",
                           "(x0 * (x1 * 0.0072399606)) + (19.899197 - (x2 / 3.6746936))",
                           "sqrt((x1 * (x0 + -0.11523731)) * 0.32163763) - ((x2 + -40.64692) / 3.619017)",
                           "(sqrt(x0 * x1) * 0.5455538) + (10.663332 - ((x2 / (5.764619 - x0)) + abs((x0 * -3.8803854) + sqrt(x2))))",
                           "(sqrt(x1 / 1.5728233) + (x2 * -0.25551835)) * sqrt(x0)",
                           "abs((x2 * -0.27999985) + (sqrt((x1 * (x0 - 0.14565083)) * 0.32039273) + 11.80532))",
                           "abs((x2 * -0.27412024) + ((x0 * ((log(x1 - x2) * 9.027243) + ((x0 + 8.13584) * -5.1861453))) + 13.096396)) + 0.5052064",
                           "sqrt((x0 * x1) * 0.33909705) + ((x2 * -0.27470574) - -9.219027)",
                           "abs((sqrt(x2 + abs(x1 * ((x0 - 0.22404715) * 0.351441))) + (x2 * -0.30726177)) - -11.931902)",
                           "(((x2 * -0.22862162) + (abs(abs((x0 * -3.9262147) + sqrt(x2)) + -5.0056906) - x0)) + (sqrt(x0 * x1) * 0.5289077)) + 7.8666",
                           "(log((x1 * x0) / x2) * 10.266278) - 16.636303",
                           "abs((log(x1) + -3.989048) * ((log(x1) * (sqrt(x0) + 0.32665798)) - (x2 * 0.08530053)))",
                           "abs(log(x0) + ((x0 * 5.9107933) - (((sqrt(x0) * 15.109395) - (x2 * 0.11226138)) * (log(x1) + -4.7744403))))",
                           "sqrt(((x0 + -0.11599234) * x1) / 3.112485) - ((x2 * 0.2762862) + -11.250337)",
                           "sqrt((x0 * x1) * (1.4100626 / sqrt(x2))) - (abs((x0 * 4.3296943) + (x2 * -0.19680928)) + -5.974596)",
                           "sqrt(((x1 / sqrt(x2)) + (x0 * -20.852518)) * (x0 * 1.6534773)) - (abs((x0 * 4.554119) + (x2 * -0.1921825)) + -5.112006)",
                           "((sqrt(x0 * x1) * 0.5822443) + 9.219382) - (x2 * 0.27465913)",
                           "abs(((5.917242 * x0) * ((sqrt(sqrt(x1)) - x0) + -1.9791722)) + (13.118381 - (0.28117377 * x2)))",
                           "abs((13.624723 - ((x2 * 0.28169543) + x0)) + ((sqrt(sqrt(x1) - (x0 / 0.08777901)) + -1.2387868) * ((x0 / 0.7198646) / 0.29753548))) + x0",
                           "(sqrt(x1 * x0) * 0.58220714) + ((x2 + -33.57319) * -0.274686)",
                           "abs((x2 * -0.27997503) + (11.805958 + sqrt(x1 * (-0.32043943 * (0.14591582 - x0)))))",
                           "abs((sqrt(abs(((x0 - 0.23299798) * 0.37390137) * x1) + (x2 + -12.801462)) + ((x2 * -0.30687356) + 12.794922)) - x0)",
                           "(x2 * -0.27470073) + ((sqrt(x1 * x0) * 0.5821862) + 9.223812)",
                           "abs(((log(x1) + -4.565412) * ((sqrt(x0) * 14.731624) + (x2 * -0.103179626))) - (x0 * 7.9785))",
                           "(3.5044706 - sqrt(abs(x2 - (23.885248 * x0)))) + (((-0.18879777 * x2) + ((-4.3737135 + log(x1)) * 9.884926)) * sqrt(x0))",
                           "x1 / (sqrt(x1) + (x2 / x0))",
                           "sqrt((x1 / ((x2 + 135.67677) / (x0 - 0.11010521))) * 59.062843) - ((x2 * 0.22166151) + -8.516053)",
                           "(sqrt((x1 / (x0 + ((x2 + 25.417303) / x0))) + 4.999864) - abs(((x2 - -2.8035085) * 0.03892575) - x0)) * 4.533314"]

air_quality_cleaned_syn_denoised = ["sqrt(x0 * x1) * ((x2 * -0.0067492556) + 0.8110674)",
                                    "abs((x2 * -0.2771945) + ((sqrt(x1 * x0) * 0.58498514) + 9.221912))",
                                    "abs((x2 * -0.28109902) + ((x0 * (((sqrt(x1) * 0.79080117) + (x1 / -244.7806)) - (x0 * 5.5986943))) + 13.381149))",
                                    "sqrt(x1 * x0) * (0.8110672 - (x2 * 0.0067493194))",
                                    "abs(((sqrt(((x0 - 0.16470256) * x1) + x2) * -0.57619953) - 11.691596) + (x2 * 0.2890434))",
                                    "abs((x2 * ((-0.025884192 / x0) + 0.31068453)) - ((((x0 - (-5.5074677 - (log(x1) * -1.322375))) * -6.998934) * x0) + 10.358681))",
                                    "((x1 * x0) / 138.1565) + (19.901493 - (x2 * 0.2721541))",
                                    "abs((11.802943 - (x2 * 0.27994567)) + sqrt(((x0 + -0.14552881) * x1) / 3.1219091))",
                                    "abs((sqrt((x0 * x1) / log(x2)) + 4.9679723) - abs((sqrt(x0) * 5.0619264) + (x2 * -0.23358802)))",
                                    "x1 / ((x2 / x0) + (x1 * 0.021921955))",
                                    "((x2 * -0.27700067) + 7.8107843) + (sqrt(x0) * ((x1 / 152.6375) + 14.131899))",
                                    "x0 * (((x2 * -0.29441294) - ((-9.297178 * log(x1)) + 35.287933)) + (log(x0) * ((log(x2) * 11.225498) - 49.20012)))",
                                    "x1 / ((x2 / x0) + sqrt(x1 - 328.45215))",
                                    "abs((((0.49476442 * x2) - sqrt(x1 * (x0 + -0.14562294))) - 20.871387) / 1.7674562)",
                                    "(x0 * (14.511157 - ((((x2 * 0.5960773) - sqrt(x1)) / (x0 + 1.0130556)) + (log(x0) * (196.16748 / x2))))) - 0.8231665",
                                    "sqrt(x0 * x1) * ((x2 * -0.0067495694) + 0.8110705)",
                                    "sqrt(x1) * abs(((sqrt(x0) * -0.63622826) - 0.1948692) + (x2 * 0.0073438133))",
                                    "abs(((abs((x2 * 0.28768024) + (x0 * -4.401772)) + -9.07435) + (x0 * x0)) + (sqrt(x0 * x1) * -0.5177195))",
                                    "abs(sqrt(x0 * (x1 / 2.9222038)) + ((x2 * -0.2771369) + 9.218156))",
                                    "abs(((sqrt(x1 * x0) * 4.9874415) / log(x1)) + ((x2 * -0.28030124) + (6.6944056 - x0)))",
                                    "((x0 * ((x0 / (x2 / -8.5425005)) + 2.021666)) * ((sqrt(x1) / log(x2)) - x0)) + ((x2 * -0.22114044) + 12.352833)",
                                    "(sqrt(x1 * x0) * -39.61082) / (-36.676052 - x2)",
                                    "abs(((x2 * -0.27999976) + sqrt(x1 * ((x0 + -0.14565118) * 0.3203943))) + 11.804)",
                                    "(((sqrt(x0 * x1) / (-74.38929 - x2)) * -58.41918) + 3.5553243) - abs((x0 * -3.6849916) + (x2 * 0.15139763))",
                                    "((x2 * -0.27216816) + ((x0 * x1) / 138.14706)) + 19.901747",
                                    "(sqrt(x1 / 2.0868099) - x0) * abs((x2 * -0.011051152) + (sqrt(x0) - -0.2512286))",
                                    "sqrt(((x0 * x0) * (x0 * -11.377978)) + (x1 / 6.7102695)) * abs(((x2 * -0.019737735) + x0) - -1.2109985)",
                                    "(((x0 * x1) / 138.15926) + 19.902098) - (x2 * 0.2721562)",
                                    "abs(sqrt(x1 * (x0 / 4.9312987)) + (10.579287 - abs((x2 * -0.28590554) + (x0 * 4.208225))))",
                                    "(sqrt((x1 * x0) / ((x2 / 19.223629) + 1.4985484)) - (abs((x0 * 4.013892) + (x2 * -0.17130435)) + x0)) + 4.28028"]

customer_churn = ["abs((x1 * 3.9306083) - x0) + (sqrt(x3) * ((((x1 + x2) * x3) * 7.918382e-7) - -2.2351732))",
                  "((((x3 * 7.941712e-7) * (x2 + x1)) - -2.0170345) * sqrt(x3)) + abs(x0 - (x1 * (4.501989 - (x1 * 0.0015487978))))",
                  "(((x3 + (x1 * -16.276945)) * 1.1085199e-6) * (x3 + (x1 * 115.31519))) + (((x1 + x2) + abs((x0 * (0.9454292 - (x0 * 0.022655327))) + abs((x1 + (x1 + -16.260836)) - (x2 - sqrt(x3))))) * 1.5158857)",
                  "sqrt(x2 * x1) + ((x3 * 0.035397705) + abs(x0 - (x1 / 0.26468554)))",
                  "(x3 * 0.031899266) + (((-57.67722 - x0) + sqrt(abs((x2 + (-101.03586 - x1)) * (x2 / 0.21542153)))) + (x1 / 0.2857964))",
                  "(-151.38612 - x0) + (((0.032972172 * x3) + (x1 / 0.27280295)) + sqrt(abs((-111.20787 + (x2 - x1)) * ((x2 / 0.13446382) - (-185.19849 + x1)))))",
                  "abs(abs((x3 * 0.03555008) + (abs((x1 * 3.892733) - x0) + (sqrt(x1 * x2) + -2034.7892))) + -2026.9299)",
                  "abs(abs((abs(x0 - (x1 * 3.4131448)) + -2052.4365) + (((x1 + x2) + 106.67328) * (sqrt(x3) * 0.014416026))) + -2047.2651)",
                  "abs(abs(abs((x1 * 3.2493796) - ((x0 + x2) - sqrt(x3))) + ((((x2 + (x1 + 93.74482)) - x0) * (sqrt(x3) * 0.018113162)) + -2069.1538)) + -2061.53)",
                  "(x3 * 0.038955577) + (abs(abs((x1 - x2) + 30.901476) - ((x1 / 0.20153256) - -21.750118)) - x0)",
                  "(x3 * 0.018835252) + abs(abs(((x1 + 282.32016) * -4.50748) + ((x2 * 10.662052) - x0)) - abs((x2 + (-145.19011 - x1)) * 8.602037))",
                  "((abs(((x2 - x1) + -85.517456) * 8.997427) + ((82.346245 - x1) * -1.6556469)) + (((x3 * 0.012816122) + (x2 - x0)) * 2.486728)) - abs((x2 * 8.460953) + ((x1 + 95.97418) * -6.6771812))",
                  "abs((x1 * -5.0586348) + x0) - ((x3 - (x1 * 19.79905)) / (((x2 + x1) * 0.039885666) + -34.3791))",
                  "(abs(x0 + (x1 * -5.0128183)) - ((x3 - (x1 * 18.729572)) / (((x1 + x2) * 0.05105997) + -37.978523))) + 17.883326",
                  "(x1 * 4.9825215) - (((x3 - ((x1 + x0) * 16.621307)) / (sqrt((x2 + x1) * 11.543582) + -86.786964)) + (x2 * (-27.360378 / (x1 - -18.757435))))",
                  "((x3 * 0.009748757) * log(abs(((x1 + 141.42863) - x2) - x0))) + (x1 * 3.8722203)",
                  "(x1 * 3.8701026) + abs(log(abs((x1 - x2) + (140.40356 - x0))) * ((x2 + x3) * 0.009630828))",
                  "(x1 * 3.7551508) + (((log(abs((x1 + 103.55317) - x2)) - (x0 * 0.016967714)) * (((14.528578 - x2) * -35.538853) + x3)) * 0.008501068)",
                  "(((x3 * 0.029775448) + x2) + ((x1 + 10.373994) * ((sqrt(x1) * 0.5060159) - (x1 * 0.015381956)))) - x0",
                  "abs((x1 - (x0 + -35.747097)) * ((x2 * -0.0067096846) + ((x1 * 0.013190483) - sqrt(x1 + (-0.80547416 * x1))))) - (x3 * -0.038059458)",
                  "(abs((x0 + (-31.504179 - x1)) * (sqrt(x1 + (x1 * -0.79679394)) - ((x1 + (x3 * -0.008386246)) * 0.013754909))) - (((x3 * -0.020232225) + 8.875649) - x2)) + x0",
                  "(x3 / ((x0 / abs(((x2 + -99.737625) - x1) / -9.077032)) + 17.901096)) + (x1 * 3.8953617)",
                  "abs((x3 / (abs(0.9418883 - ((x0 * 7.863148) / (x1 - (x2 + -97.81435)))) + 17.794771)) + ((x1 * 3.9061089) + -13.51853))",
                  "((x3 + (x2 * 38.32159)) / (((x0 + (x2 - x1)) / abs(((x2 + -99.476685) - x1) / -2.9039836)) + 26.129946)) - (x0 + (x1 * -3.7906244))",
                  "abs((x1 + 67.26667) - abs((x1 - -91.7202) - (x2 * 1.6975671))) + (((x3 * 0.033491056) - (x1 * -3.9547849)) - x0)",
                  "(abs((x1 + 56.9023) - abs((x2 * 1.4729507) - (x1 - -76.69148))) + (((x3 * 0.01689868) - (x1 * -2.1407397)) - x0)) * 1.8087661",
                  "((x3 * 0.026440423) + abs((abs(((77.98082 - x2) + (x1 + x1)) * 4.4946504) - x0) - (abs(((x2 * 1.2922997) - (x1 + 96.69407)) * -4.9994545) - 108.817116))) + -1.7589797",
                  "(((abs(((x2 * x2) * 0.0017459763) - x1) * 2.970616) + x2) - (x0 + (x1 - ((2.5275893 - (x1 * 0.0023086974)) * x1)))) + (x3 * ((x1 * 0.00014815669) + 0.020210352))",
                  "(x3 * (((x3 * 1.1856954e-8) * x1) + 0.020158414)) + (abs(abs((x1 - (x2 * (x2 * 0.0017238519))) * -2.980513) - ((x0 + x1) - ((2.5272303 - (x1 * 0.0013890482)) * x1))) + x2)",
                  "abs(abs(((x2 * (0.0017640692 * x2)) - x1) * -2.9804199) - ((x0 + x1) - (x1 * (2.527066 - abs((x2 - x1) * -0.0017166605))))) + (((x3 * ((x1 * (x3 * 1.0733375e-8)) + 0.019804822)) + x2) + 10.867995)"]

customer_churn_denoised = ["abs((x2 * (x1 - x0)) * -0.006877943) - (((x3 * -0.009448296) - x1) * 3.7454793)",
                           "((x2 - x0) * abs((112.97262 + (x1 - x2)) * 0.012442317)) - (3.6380663 * ((x3 * -0.008789351) - x1))",
                           "((((((x2 * 0.83235973) - x0) / 222.44917) + 0.02100513) * abs(x1 + (113.12851 - x2))) - ((x3 * -0.008904629) - x1)) * 3.5775788",
                           "(((x2 - x0) * log(abs(0.06502947 * (x1 + (104.16028 - x2))))) - (-3.8430543 * x1)) + (0.02693843 * x3)",
                           "abs((((x3 * 0.028739084) - (x1 * -3.683505)) + (log(abs(((106.70284 - x2) + x1) * 0.060928617)) * x2)) - ((x0 * x0) * 0.030888533))",
                           "abs((((x2 + -5.621666) * log(abs(((x1 + 106.70315) - x2) * 0.06256974))) - (((x0 * 0.029801935) * (x0 - -1.0279288)) - -0.56208396)) + ((x3 * 0.028612727) - ((x1 + 0.53244376) * -3.7344358)))",
                           "abs(((470.64066 - abs(x1 + -460.86038)) * 3.813835) - x2) + ((x2 + ((sqrt(x1 + 44.340252) * 0.0034159569) * x3)) - x0)",
                           "abs((((482.82266 - abs(x1 + -485.42422)) * 11.606493) - abs((x2 - (x3 * 0.005099744)) + x1)) - (x1 * 8.015888)) + (((((x3 - x0) + x1) * 0.003883303) - -29.083693) * (sqrt((x1 + (x2 * 0.28273636)) - -2.0715714) - 2.4163458))",
                           "abs(((x1 / (((x1 * 0.43744606) + x1) + -466.86713)) / -0.27294683) - (((459.95728 - abs(x1 + -468.6686)) * 3.6817966) - (x1 + (x2 + (x3 * -0.004293409))))) + ((((x3 - x0) * 0.003893872) - -28.246614) * (sqrt((x1 + (x2 * 0.25879067)) + 0.94016236) - 2.1314437))",
                           "(((x1 * -72.07302) - x3) / -18.34821) - (x3 / (abs(x1 + ((146.76607 - x2) - x0)) + 13.021399))",
                           "abs(((((x1 * -86.73977) - x3) / -22.137999) - x0) - (x3 / (abs((x1 - x0) + (147.60324 - x2)) + 8.543643))) + x2",
                           "(x2 - x0) + (((((-107.85491 - (x1 * -0.036550023)) * (x1 - sqrt(x1))) - x3) / -22.830349) - (x3 / (abs(x1 + ((146.79205 - x2) - x0)) + 12.776919)))",
                           "((((x3 * 0.005630732) + x1) * 1.7548038) + abs(abs(x0 + (x1 - x2)) - x1)) * 2.283072",
                           "(((x1 * 3.9544413) + abs((x1 - -67.25226) - abs((x1 + 91.709694) - (x2 * 1.6975262)))) + (x3 * 0.03348793)) - x0",
                           "((((x0 / -2.13387) + abs(abs((x2 * 1.3419377) - (x1 + 100.856926)) - abs((x2 * 0.5844542) - (x1 + 97.80589)))) + ((x3 * 0.0067072525) + x1)) / 0.24983022) - x2",
                           "((x3 * 0.010953232) * log(abs((x2 + -104.3007) - x1))) + ((x1 * 3.8496346) - x0)",
                           "(((x3 + (x2 * 45.51738)) * log(abs(abs(x2 + (189.51488 - x1)) + -293.48505))) * 0.006576211) + ((x1 * 3.9285183) - x0)",
                           "(x1 * 3.4900908) + (abs((((x1 + ((x2 - x0) * 3.1104128)) * 13.963358) + x3) * 0.0068389974) * log(abs(abs((x2 + 189.65865) - x1) + -293.32965)))",
                           "((x3 * 0.022564007) + abs((x1 - abs(x1 - (x2 - x0))) * 2.2826946)) + (x1 * 4.006454)",
                           "abs((x1 - abs(x1 - ((x2 + -54.046482) * 1.6991066))) + 67.33327) + ((x1 * 3.9543235) - (x0 + (x3 * -0.03348155)))",
                           "abs((abs((x1 + 56.815273) - abs(((x2 + -52.108517) * 1.4723002) - x1)) + ((x1 * 2.1603434) - ((x3 * -0.0170661) + x0))) / 0.5576115)",
                           "(((400.5814 - abs(451.9272 - x1)) / 0.23188618) + abs((227.70818 - x2) - x0)) + (x2 - (x3 * -0.038866848))",
                           "abs(((402.2151 - abs(442.1924 - x1)) / 0.30001026) + (((x2 - (-0.037999313 * x3)) - x0) + abs(x1 + (139.96634 - x2))))",
                           "((x3 - (x2 * ((-224.26785 - x1) / ((x0 + 50.349564) / 21.155497)))) * 0.032275952) + (abs((x2 + x2) - ((532.71234 - abs(466.95087 - x1)) * 3.7018464)) + -239.23314)",
                           "(x1 + ((x2 + x1) - x0)) + abs(((abs(((x1 * 218.8268) + x3) + ((69.75739 - x2) * 189.83545)) - abs(((x2 + -76.209785) - (x1 * 0.75202775)) * 209.5102)) * 0.032167006) + 64.58477)",
                           "abs(((x1 + -114.15) + ((x2 - x0) * 2.831968)) + ((((x3 * 0.16469355) - abs(((x1 * 0.81496596) - (x2 + -78.66382)) * 94.13922)) + abs((x1 * 94.50955) + ((82.77384 - x2) * 97.410576))) * 0.16775157))",
                           "abs(((abs(abs((x1 + x1) + (x2 + -922.89154)) + -910.29443) + -136.20494) * 1.3081101) + ((abs((151.43413 * x1) + ((93.55956 - x2) * 163.31883)) + ((x3 - x0) - abs(((x2 + -76.503654) - (0.7811754 * x1)) * 145.43567))) * 0.040441107))",
                           "(x3 * (((x2 * abs(x1 - x0)) * 6.504832e-7) - -0.033328924)) + (x1 * 3.9627714)",
                           "abs((x2 * ((x0 + -32.440327) * 0.025377193)) - (x1 * 3.7014651)) - ((((x2 * x1) * 0.21657164) + x3) * -0.03305468)",
                           "(x3 * 0.033448882) + abs(((x1 * 4.609377) - (((x1 * -0.50788635) + x0) * (abs(x2 + -43.974632) * 0.01899886))) + ((x1 * x1) * -0.0019898936))"]

customer_churn_syn = ["sqrt(x1 * (x1 + x3)) + ((x3 * (((x0 + x1) / -0.8690594) + x2)) * 0.00013745924)",
                      "abs(((x3 * 0.0001430859) * (((x1 + x0) / -0.8475065) + x2)) + sqrt(x1 * ((x3 + x1) + x1)))",
                      "abs(abs(sqrt(x1 * (x1 + ((x2 + x3) + x1)))) + (x3 * ((((x1 + x0) / -0.8323987) + x2) * 0.00014342116)))",
                      "x1 + sqrt((x3 * ((-2.6341276 - x1) / (x1 - -176.10335))) * ((x0 + -111.564865) - x2))",
                      "(x3 * 0.013501897) + (sqrt((x1 * (((x2 * x2) * x0) - (x3 * -483.38892))) / ((x1 - -210.75601) / 0.2817494)) + x1)",
                      "abs((x1 - 68.53441) + sqrt((x3 * 7.3632665) + ((((x0 * (x2 * x2)) - ((x3 + x1) * -429.72897)) * x1) / (((x0 + x1) - -101.178024) / 0.37447864))))",
                      "x1 + abs(sqrt(((x0 * x2) + (x3 * 7.329745)) * sqrt(x1)) + -62.92687)",
                      "((x1 + -57.054714) + sqrt(((x3 * 4.785237) + (x2 * x0)) * sqrt(x1 + 0.40664375))) / 0.84365165",
                      "x1 + ((sqrt(((x2 * ((x2 * 0.015068275) * x0)) + (x3 * 7.3306527)) * sqrt(x1 + 0.43063608)) + -55.168575) - x0)",
                      "(sqrt((sqrt(x2 * (x1 / 5.1382017)) + 4.060597) * (x3 + (x0 * sqrt(x2)))) + (sqrt(x1 + 33.95727) * 39.37801)) - 287.20416",
                      "abs(((sqrt(x1 + 22.946493) * 34.288754) - 207.60913) - (x0 - sqrt((x3 + (x2 * (x0 / 5.9217424))) * sqrt(((x1 * x2) / 3.8136911) - -33.649963))))",
                      "abs(((sqrt(x0 * x1) + x0) - sqrt((((x2 / 3.187557) * x0) + x3) * sqrt(((x1 / 6.158347) * (x2 - -173.57925)) + 38.90014))) - ((37.526627 * sqrt(x1 + 49.803375)) - 330.63895))",
                      "abs(sqrt(sqrt((x1 * sqrt(x3)) * x3) * sqrt((x2 * x0) - ((x0 - 80.46106) * x1))) - (x0 + 21.219187))",
                      "abs(sqrt(sqrt(0.54785514 * ((((x2 + -88.20949) * x2) - ((x0 - 116.480804) * (x1 - -44.851105))) * (x3 * (x1 * sqrt(x3)))))) - 52.912495)",
                      "sqrt(sqrt(abs(((((x0 - 97.45417) * (x1 - -90.893394)) - (x2 * (x2 + -111.42655))) * ((x3 * 0.5323951) * (-0.5753313 - x1))) * (sqrt(x3) + x0)))) - 84.36493",
                      "abs(176.42682 - (((sqrt(x3) + 38.07405) / 1.8826284) * ((((x0 - x2) * -0.014920004) + 3.6730785) + sqrt(x1))))",
                      "abs(197.18993 - abs((((sqrt(x1) + 5.561052) / 2.0242248) * (sqrt(x3) + 45.72908)) + (x0 * ((0.031302314 * x2) - 4.4048495))))",
                      "abs(abs((((sqrt(x0 + x3) + 60.539764) / 2.2670095) * (sqrt(x1) + 7.436091)) - (267.0101 - (x0 * (-3.895346 - (x2 * -0.027999988))))) + -47.77446)",
                      "abs((((sqrt(x1) + 7.15174) * ((sqrt(x3) + 43.209244) / 1.9626682)) - 276.94116) - (x0 * ((x2 * -0.03592311) - -2.5524988))) + (sqrt(x3) * (x0 * -0.036769494))",
                      "((sqrt(x3) * (x0 * -0.036875825)) + -25.051615) + abs((((sqrt(x1) + 8.150253) * ((sqrt(x3) + 50.66978) / 2.0866578)) - 309.10754) - (((x2 * -0.036453035) - -2.665731) * x0))",
                      "abs((((x0 * -0.055309933) * sqrt(abs(x1 + ((x2 / -0.113475375) + x3)))) + -42.107403) + abs(((((sqrt(x3) + 50.25782) * (sqrt(x1) + 8.858525)) / 2.0613725) - 335.63556) - (x0 * ((x2 * -0.041673746) - -2.3354478))))",
                      "abs(x0 - (x3 * 0.023152417)) + sqrt((x1 * (sqrt(x3) * 0.1815289)) * (x2 + 161.4764))",
                      "abs(sqrt(((abs(x2 - x0) + 172.02368) * 0.204225) * (x1 * sqrt(x3))) + ((x3 * 0.022629527) + -32.707443))",
                      "sqrt(((x1 * 0.23043476) * sqrt(x3 + (x0 * x0))) * (abs(161.81056 - (x0 * 2.1605935)) + x2)) + ((x3 * 0.024455145) - 40.498962)",
                      "(sqrt(((x3 * 4.785001) + (x0 * x2)) * sqrt(x1 + 0.40657145)) + (x1 + -57.035046)) * 1.1853067",
                      "abs((x1 + -76.07453) + sqrt((abs((x3 - (x0 * x2)) * -3.2345328) + (x3 * 6.8620644)) * sqrt(x1)))",
                      "abs(sqrt(sqrt(x1 + 0.26331896) * (abs(((x2 * x0) - x3) * (x2 * 0.02357495)) + (x3 * 6.890549))) + (x1 + -69.03675))",
                      "(x1 + (((x2 + -152.77934) * x0) * 0.028952595)) + sqrt((x3 * sqrt(x1 - -0.09453085)) * 7.057229)",
                      "(((x2 + -162.89983) * (x0 * (x2 * 0.00025483296))) + -46.64111) + (sqrt((x3 * sqrt(x1 - -0.3168591)) * 8.150412) + x1)",
                      "x1 + abs((((x0 * sqrt(x1)) * ((sqrt(x3) * -1.6451639) + x2)) * 0.00443227) + (-74.478676 + sqrt(sqrt(x1) * (8.954588 * x3))))"]

customer_churn_syn_denoised = ["sqrt((x3 + (x2 * sqrt(x0))) * x1) + (x3 * ((x1 - 56.904655) / -5852.527))",
                               "sqrt(x1 * (x3 + (x1 * sqrt(x0)))) + ((x3 / -4637.6094) * (x1 + ((x2 - x0) * -0.6796264)))",
                               "sqrt(((x0 * abs(sqrt(x3) + (46.060482 - x2))) + x3) * x1) + ((((x1 - (x2 - x0)) * x3) / -5790.4263) - x0)",
                               "x1 + abs(sqrt(sqrt(x1) * ((x2 * x0) + (x3 / 0.1364844))) + -62.93221)",
                               "((x1 + sqrt(sqrt(x1 + 0.40961972) * ((x3 / 0.21124618) + (x0 * x2)))) + -56.67989) * 1.1896565",
                               "x1 + abs((sqrt(sqrt(x1 + 0.5737658) * ((x0 * (x2 / 0.42349088)) + (x3 / 0.13395968))) - x0) + -69.151886)",
                               "x1 + sqrt((x1 * (x3 * 175.15506)) / (x1 - (x2 + -266.7551)))",
                               "x1 + abs(sqrt(((x1 + 3.6130161) * (x3 / (x1 - (x2 + -286.53992)))) * (238.03363 - x0)) + -26.190058)",
                               "(x1 + (x0 * -2.291411)) + sqrt(((x0 * x0) + x3) * (((x1 + 4.7377906) * (217.39954 - x0)) / (x1 - (x2 + -274.17413))))",
                               "x1 + (x1 + ((-10.519676 + sqrt(x3 + x0)) * (sqrt(x1) - ((x1 - (x2 / 2.6194875)) * 0.034461293))))",
                               "abs((x0 * (x2 / 27.534657)) + (((sqrt(x3) + 48.66854) * (sqrt(x1 / 4.214533) - (-3.798317 - (x0 * -0.0355036)))) + -314.49203)) - x0",
                               "abs((x1 / (-317.0756 - (x0 - x3))) + abs(((x2 * x0) / 31.443691) + (((sqrt(x3) + 48.532963) * (sqrt(x1 / 4.217291) - (-3.755746 - (x0 * -0.037237223)))) + -315.2615)))",
                               "((x0 / 30.659435) * (x2 - 133.03166)) + (x1 + abs(sqrt(sqrt(sqrt(x3) * (x1 * (x3 * 6087.4917)))) - 77.40407))",
                               "abs(97.37302 - abs(sqrt(sqrt((x1 + 0.90421635) * (sqrt(x3) * (x3 * 7166.9487)))) + ((((x2 - 142.42847) * x0) / 29.195807) + x1)))",
                               "abs(sqrt(sqrt(((sqrt(x3) * x1) + 46.897987) * (x3 * 6633.4233))) + (abs(x1 + ((x0 / 24.915216) * (x2 - (x0 + 39.28458)))) - 125.51001)) - x0",
                               "abs(69.630394 - sqrt((x3 + (x2 * sqrt(x0))) * sqrt(x1 * 54.969738))) + x1",
                               "(x1 - x0) + abs(sqrt(sqrt(x1 * 54.63244) * (((x0 * 0.3161354) * x2) + x3)) - 62.814728)",
                               "abs((x0 * -2.8319108) + (sqrt(sqrt((x1 + 1.1645228) * 60.674114) * (x3 + ((x0 * x2) * 0.5244073))) + x1)) - 59.810204",
                               "abs((x1 + (sqrt(x1 * x3) + ((((x1 + x0) - x2) * x3) * -0.00020060902))) * 0.87220895)",
                               "sqrt((x3 + (x2 * (x0 / 4.615093))) * x1) + (((x0 + ((x1 - x2) * 0.5058257)) * -0.00034949937) * x3)",
                               "((((x1 - x2) * 0.5231529) + x0) * (x3 * -0.0003244708)) + sqrt(x1 * (x3 + abs(x0 * ((x2 / 2.4208727) + -33.465244))))",
                               "(((x1 * 1.3193333) - (x2 - x0)) * (x3 * -0.0001361587)) + sqrt((x3 + (x1 * 2.8734138)) * x1)",
                               "(((x1 * 1.605579) - (x2 - x0)) * (x3 * -0.00011552517)) + sqrt(((x2 * sqrt(x0)) + (x1 + x3)) * x1)",
                               "((((x1 - (x2 - x0)) * x3) * -0.00014799663) + sqrt(x1 * x3)) + abs((x1 * x0) / (x2 + ((2.705543 - (x3 * 0.07686814)) - x1)))",
                               "x1 + abs(sqrt(((x3 * 7.326359) + (x0 * x2)) * sqrt(x1)) + -62.82803)",
                               "(x1 + abs(-61.482933 + sqrt(((x2 * x0) + (x3 * 4.8994493)) * sqrt(x1 - -0.43337253)))) / 0.84540033",
                               "abs(abs(sqrt((x3 + ((x2 * 0.5232645) * x0)) * sqrt((x1 + 1.214575) * 62.133617)) - ((x0 * 2.8592205) - x1)) + -63.24353)",
                               "(sqrt(sqrt(x1 + 0.33060732) * ((x0 * x2) + (x3 * 7.411986))) + x1) + -67.56093",
                               "(x1 + sqrt(((x3 * 7.351768) + ((x0 * 2.3474813) * x2)) * sqrt(x1 + 0.5436076))) + (-64.40934 - x0)",
                               "abs(((-50.403812 - (1.6912587 * x0)) + (x1 - -0.5254512)) + sqrt(((x3 * 7.795663) + ((x0 * x2) * (x2 / 65.949524))) * sqrt(x1 + 0.5785711)))"]

insurance_original = ["(x1 * 23866.865) - ((-688.8787 - (x0 * x0)) * 3.4590774)",
                      "(((x0 * 3.4559329) * x0) + 2385.8257) + (x1 * ((-4358.0586 / (21.514912 - x0)) + 23656.635))",
                      "(abs(x1 * 22422.986) - ((x0 * x0) * -3.7698078)) - (-2554.425 - (x0 * (((x0 / ((x1 * x0) + -21.58985)) * 8.77379) - x1)))",
                      "((x1 * 23734.506) - -2395.6648) + (((x1 + x0) * x0) * 3.451729)",
                      "(((23735.78 * (x1 / x0)) - (x0 * -3.4496038)) * (x0 + (3.824214 / (x0 - (22.518074 - x1))))) + 2387.7366",
                      "(x0 - (2.8558095 / (21.558254 - x0))) * ((130.40273 + (x0 * 1.8858025)) + (((23714.133 / x0) * x1) - (104.90439 / (107.30867 - ((x0 * x1) + x0)))))",
                      "(x1 + ((log(x0) * 0.0024252646) * x0)) * 23789.418",
                      "(x1 * ((-4301.602 / (21.508142 - x0)) + 23666.87)) + ((x0 - -173.30675) * x0)",
                      "(((-1518.7284 / (43.786716 - x0)) - -22913.723) * x1) + ((x0 * ((x0 - ((x1 * -20.917732) / ((x0 / 2.2923555) - 9.426005))) * 3.446296)) + 2406.0977)",
                      "((x1 * 23736.002) + 2395.4856) - (x0 * ((x0 + x1) * -3.4518144))",
                      "(x1 * ((4335.921 / (x0 + -21.52715)) + 23385.32)) + (((x0 * 3.444799) * ((x1 + x1) + x0)) + 2406.824)",
                      "(x1 * (((x0 / (x0 - 43.992977)) + 23517.648) - (155522.1 / (((x0 + -13.504706) * -48.103516) - -391.71576)))) + (1996.7104 - (((x0 * x0) + 43.992977) * -3.575086))",
                      "(x1 * 23864.498) + (((x0 * x0) * 3.4596798) - -2383.518)",
                      "(((x1 + 3.264271) * x0) * x0) + ((((4267.332 / (x0 + -21.575819)) + 21917.814) * x1) - -2726.1533)",
                      "abs((((3246.2612 / (x0 + -21.70979)) - -23582.523) * x1) - (((-2.158569 / (((x0 * 0.045838296) - x1) - x1)) - (x0 + (x0 + 124.80716))) * x0))",
                      "((x0 - -173.30577) * x0) - (x1 * -23698.875)",
                      "15498.611 - ((abs(3770.362 - (x0 * x0)) - (x1 * 6206.9775)) * ((x1 * 0.584945) + 3.4645185))",
                      "((3.3647416 - (x1 * (x0 / ((21.562428 - x0) * 2.7083821)))) * (sqrt(x0) - ((6608.9277 - (x0 * x0)) - (x1 * 6681.201)))) - -24761.908",
                      "(x1 * 23789.193) + ((x0 * 57.695545) * log(x0))",
                      "(x1 * ((183.0442 / (x0 + -21.973146)) + 23635.098)) + ((x0 + (x0 - -125.12827)) * x0)",
                      "(x1 * (22306.805 - (x0 * ((-188.70279 / (x0 + -21.580963)) - (x0 * 0.6386161))))) + ((x0 - (-91.48574 / x0)) * (x0 + (x0 - -113.31811)))",
                      "((x0 * log(x0)) * 57.695705) + (x1 * 23789.074)",
                      "((x1 * ((4374.8574 / (x0 + -21.50344)) + 23660.762)) + ((x0 * x0) * 3.4588623)) + 2382.9968",
                      "2370.503 + (((x1 + x0) * (x0 * 3.4464731)) + (((x0 * ((x0 / (x0 - 53.64868)) + (408.82047 / ((x0 + x0) + -43.03491)))) + 23378.965) * x1))",
                      "(x1 * 23698.838) + ((x0 - -173.30731) * x0)",
                      "((x1 * 22388.1) - -18264.379) - abs(((x0 * x0) * (-3.3584259 - x1)) + 15693.396)",
                      "((22741.793 - (-4201.9326 / (x0 + -21.57224))) * x1) - (-2514.8572 + (x0 * ((x1 / ((x0 / -22.606907) + 1.9355707)) - (x0 * 3.475536))))",
                      "(sqrt(x0) * (x0 * 31.801434)) - (x1 * -24075.145)",
                      "(((x0 * 276.11252) + (x1 * 23889.39)) + -3467.7983) + abs((x0 * 83.31043) - 3306.5413)",
                      "abs(((1.5724242e6 / ((x0 + -38.693523) * ((x0 + -21.492098) * x0))) * x1) - ((((x1 + x0) * 3.4635909) * x0) + (2357.5593 - (x1 * -23824.137))))"]

insurance_original_denoised = ["(x0 * (x0 + 173.172)) - (x1 * -23647.43)",
                               "(((x0 / 0.28933176) * x0) + 2383.914) - (((-4390.706 / (x0 + -21.516302)) + -23591.146) * x1)",
                               "(((x0 + x1) * ((x0 + x0) + (x0 - -37.800377))) - (x1 * (((-4519.1387 / (x0 + -21.511475)) + -23663.865) - (2503.043 / (38.68435 - x0))))) + 1691.7495",
                               "(x1 * 23814.934) + (((x0 * x0) * 3.4542701) - -2387.5369)",
                               "(abs(x1 * ((4346.3213 / (x0 + -21.526428)) + 23331.242)) + 2400.7012) + (((x1 + x0) + x1) * (x0 * 3.4456024))",
                               "((((3381.9126 / (x0 + (x1 + -22.549911))) * (x1 - -0.2548022)) + (x1 * 22781.453)) + (((((x1 * x0) * 0.008411777) + 3.312267) * (x0 * x0)) + 2577.7473)) * 1.0050306",
                               "(((x0 * x0) * 3.4543824) + (x1 * 23814.676)) - -2387.5662",
                               "(x0 * (x0 * (((x0 * x1) / ((x0 + -21.581966) / 0.4114182)) - -3.3560443))) + ((x1 * 22314.326) + 2563.328)",
                               "((((x1 / ((-463.88562 / x0) + x0)) * 18.964804) - -3.3954608) * ((x0 + (x1 * (0.93114096 / ((-191.6531 / x0) - -3.5737305)))) * x0)) + ((x1 * 22650.654) + 2496.7478)",
                               "((x0 + 173.172) * x0) + (x1 * 23647.422)",
                               "((23779.766 * x1) - ((x0 * x0) * (-3.418963 - (x1 / (x0 - 21.944048))))) - -2372.931",
                               "((x1 * ((7989.6274 / ((x0 + -43.09666) + x0)) + 23697.865)) - (((-3.4305768 - (x1 / (x0 + -43.717834))) * x0) * x0)) - -2357.579",
                               "((x0 + 173.172) * x0) + (x1 * 23647.422)",
                               "(((4065.3875 / (x0 + -21.555054)) + 23599.832) * x1) + ((-5.025242 + x0) * (x0 + 200.13306))",
                               "((x1 * ((4121.339 / (x0 + -21.534096)) + 23626.963)) + ((x0 + -13.393897) * 280.71872)) + abs((x1 + ((x1 + x0) + -41.027927)) * 91.707726)",
                               "((x1 + ((x0 * x0) / 6894.8037)) * 23815.234) - -2387.6606",
                               "((x1 * 23056.188) + (((x0 + x0) + 132.65689) * x0)) - (-187.92491 / ((-21.577858 / x0) + x1))",
                               "((((8.187966 / (x1 + (-25.989151 / (x0 * 1.2022597)))) + 1064.3887) * x0) - ((-22441.25 * x1) - 1471.3389)) + (((x0 + (x0 + x0)) + -1004.27716) * x0)",
                               "(x1 * 23647.31) + (x0 * (x0 - -173.17105))",
                               "(((4082.068 / (x0 + -21.532011)) + 23462.484) * x1) + (x0 * (x0 + 172.98453))",
                               "((((1986.5535 / (x0 + -21.552711)) + 11779.217) - (1087.9325 / (x0 + -38.69948))) * (x1 * 2.0178597)) + (((x0 + x0) + 124.23938) * x0)",
                               "((x0 * log(x0)) * 57.657303) + (x1 * 23737.953)",
                               "(x0 * (((x1 / (x0 + -21.945667)) + 3.4378803) * x0)) + ((x1 * 23523.389) + 2417.9663)",
                               "(x1 * 23451.6) + (((((((x1 * 47.40611) - -10.611956) / (x0 + (x1 + -22.530766))) + x0) * x0) * 3.4476087) + 2336.1123)",
                               "(log(x0) * (x0 / 0.01739375)) + (x1 * 23635.67)",
                               "(((x1 * ((1256.2845 / (x0 - 21.522343)) + 6822.451)) + 689.1617) + (x0 * x0)) * 3.4577324",
                               "((((x0 * x0) + abs((x1 * (1338.5018 / (x0 + -44.39342))) + 704.63)) + (((1276.5035 / (x0 - 21.55417)) + 6856.1865) * x1)) + 20.128618) * 3.4075084",
                               "((x0 - -173.172) * x0) + (x1 * 23646.938)",
                               "(x0 * (x0 * 3.454299)) + ((x1 * ((4289.4453 / (x0 + -21.530743)) + 23581.74)) + 2396.6895)",
                               "((x0 * 3.358482) * x0) + (((99.49522 / (x0 + -21.498413)) + (abs((-97.448746 / (43.45145 - x0)) + 118.871826) - -490.89847)) * ((x1 * 38.656593) + 4.1483746))"]

insurance_original_syn = ["(x1 * 24319.945) + ((x0 - -293.48065) * x0)",
                          "(x0 - (((x1 * -21.522005) + -25.349886) + (sqrt(x1 + x0) * 8.576265))) * 1157.7449",
                          "((x1 * -2063.314) + (-925.2436 - (((sqrt(x0) * -829.99286) + 1517.6101) - (x0 * -97.267815)))) * (-11.880979 - (x1 / ((x0 * -1.1652814) + 57.00973)))",
                          "(x0 * (x0 + 293.45444)) - (x1 * -24321.357)",
                          "((x0 - (x1 * ((x0 + -62.40316) * 9.871147))) * ((x0 * 5.2888613) + -67.42178)) + 7074.8853",
                          "((7320.636 + ((-69.09153 + (x0 * 5.176753)) * (x0 - (((x0 + -61.085094) * x1) * 10.927701)))) - (-403.12677 / (x0 + (-53.890144 - 1.0106808)))) - abs(x0 + -61.085094)",
                          "(x1 * 24318.088) + ((x0 + 293.45428) * x0)",
                          "(((x0 + -12.6893835) * ((((x1 * (x0 - 62.413864)) * -9.825068) + x0) * 5.300922)) + 7086.3267) - x0",
                          "(((x0 * x0) + (4116.6685 - (x1 * -13071.344))) + (x0 / (-56.452072 - (x0 * -1.0271674)))) * (((x1 / (x0 + -57.475544)) - (x0 * -0.028966222)) + 1.0880215)",
                          "((x0 * (x0 * 4.4643064)) + (x1 * 24176.96)) + 5800.7607",
                          "((x0 + (((x0 * -9.890672) + 617.0223) * x1)) * ((x0 + -12.749011) * 5.288891)) + 7073.845",
                          "(((x0 + (x1 * ((-9.139391 * x0) + 571.74805))) - 3.599378) * (((x0 + -15.260678) + log(x0 - -0.042446468)) * 5.4259105)) + (7231.581 - x0)",
                          "(5801.5728 - (x0 * (x0 * -4.4639277))) - (x1 * -24174.05)",
                          "abs((((x0 * -4.47658) * x0) + ((((4.473415 / (x0 + -56.51759)) - 6.166675) * 3889.0605) * x1)) - 5782.25)",
                          "5775.959 - (((x1 + x0) * (x0 * -4.4758754)) + ((-13.499208 + (0.9611891 * x0)) * (x1 * ((4.614631 / (-48.99642 + x0)) - (3802.924 + (-59.729748 * x0))))))",
                          "(((x0 * 4.463614) * x0) + (x1 * 24177.824)) - -5801.911",
                          "abs((((x0 * x0) * -4.4698806) + -5793.39) - (x0 * (x1 * ((x0 * 22.47739) - 2273.2625))))",
                          "abs((((x0 * 0.6297402) / ((x0 * 0.026418692) + -1.2954425)) - ((((x0 * 0.16289052) + 4.1197495) - sqrt(x0 + x0)) * -7475.044)) + ((x1 + x1) * 13032.076))",
                          "(x0 * (x0 + 293.45645)) - (x1 * -24313.432)",
                          "(x0 * ((abs((x0 + -60.982002) + x1) * ((x1 * x0) + -6.6013517)) + 234.85687)) + 8846.82",
                          "((((x1 - -0.07382463) * -17717.865) / (x0 + -55.55854)) - ((x0 * x0) * (((x1 * (x0 + -55.55854)) + -3.7733135) / 0.8325331))) + 5626.4766",
                          "((x0 + 293.45453) * x0) - (x1 * -24317.453)",
                          "((x0 - 12.729454) * ((sqrt(x1) * ((x0 * -52.22989) + 3258.91)) - (x0 * -5.28921))) + 7071.5986",
                          "((((x0 + x0) / 0.39420176) + ((((((x0 + x1) + 9.897144) / (x0 + -49.055695)) + (x0 * -32.549644)) + 2313.0315) * x1)) * (x0 - 8.932149)) + 6551.5522",
                          "(x1 * 24281.93) + (((279.63007 + x0) * x0) + 596.9439)",
                          "((x1 * 144.86946) + (x0 + (x0 + -4.775545))) * ((((x1 * 88.584015) + -10.091146) / (48.479168 - x0)) - -180.03932)",
                          "abs(((-175.05084 - ((x1 * 48.704468) / (48.704468 - x0))) * ((x0 + (x1 * (x0 + 128.71288))) + (x0 + -2.7177167))) + (58.142937 / ((x0 + x1) + -57.998505)))",
                          "(x0 * (x0 + 293.43967)) + (x1 * 24337.844)",
                          "abs((x0 + (x0 * ((-1.1401088 / (49.082626 - x0)) - (x1 * (-61.51126 + x0))))) + 287.47293) * (x0 + 0.8217416)",
                          "x0 * (abs((abs(-1.6723088 / (x0 + -60.97976)) + 335.34027) + (((-1.2187136 / (49.087826 - x0)) - ((x0 + -60.97976) * x1)) * ((x1 + x1) - (0.589798 - x0)))) + 0.41311425)"]

insurance_original_syn_denoised = ["(x1 * 23839.3) + (((x0 * x0) * 4.461984) + 5801.332)",
                                   "(((x0 + 1844.6935) - (-1452.396 / (56.48495 - x0))) * (12.498326 * x1)) + (5771.4893 - ((-4.4792504 * x0) * x0))",
                                   "abs((((((7575.403 / (56.782715 - x0)) + 26538.576) * x1) + 8257.033) - (53.479427 / ((x1 + (-22.011261 / x0)) - 0.5495046))) - (x0 * ((x0 * -6.0995774) - -135.03455)))",
                                   "((x0 + 293.36734) * x0) + (x1 * 23980.914)",
                                   "((x0 * (x0 * 4.4437704)) + ((((x0 / (48.953472 - x0)) + 710.76874) * x1) * 37.33397)) + 5831.1304",
                                   "abs(abs((2313.873 / (48.94103 - x0)) - -2846.15) - ((((x0 / (((x1 * 1.2913013) + 55.529476) - x0)) + 293.82748) * ((x1 * 95.3679) + 29.13818)) + ((x0 * x0) * 4.549529)))",
                                   "((x1 * 23841.895) + ((x0 * 4.4623003) * x0)) - -5800.5425",
                                   "abs((((log(x0) * 467.64917) + -1016.7726) * (x0 + (x1 * -169.69406))) + 16743.555) + (x0 * -808.1557)",
                                   "abs(((((x1 * 1.1333721) + x0) * (((x0 + (log(x0) * 196.5775)) + ((x0 / (x0 + -49.087624)) * 1.204468)) + 21982.584)) + (x0 * -22641.469)) - -8819.618)",
                                   "((x0 * 4.46186) * x0) + ((x1 * 23840.99) - -5801.4663)",
                                   "((x0 - -292.9193) * ((x0 - x1) - (((x1 / (sqrt(x0) + -7.510897)) + x1) * 3.514545))) + (x1 * 25392.684)",
                                   "abs(((x0 + -12.407845) * ((x0 * 5.2659273) - ((x1 - -0.0014706658) * (((x0 * 49.99926) + -3217.3347) + (3.4166577 / (0.9912891 - (x0 / 49.57816))))))) - -6977.062)",
                                   "5784.669 - ((((x1 * (x0 - 60.05808)) - 4.4718504) * x0) * x0)",
                                   "abs(((x0 * (((x0 + -57.115437) * x1) - 4.4717803)) * (x0 - ((x1 / 0.018495813) / (x0 + -55.703026)))) + -5784.4155)",
                                   "(5780.121 - (((x1 * (x0 + -56.519188)) - 4.4776306) * ((x0 * x0) - ((x1 * 203.40709) / ((x0 / 12.466293) + -4.4562597))))) - (x0 / ((x0 / (12.314596 - x1)) + -4.3296084))",
                                   "((x0 * x0) * 4.461919) + ((x1 + 0.24334398) * 23839.758)",
                                   "abs((x1 * 25776.334) + (6729.0566 - (((190.43434 / (x0 + -49.034725)) + ((x0 * 40.12534) + -357.6281)) * (x0 * -0.12368547))))",
                                   "abs((((x0 * (((x0 * -134.19373) + 1609.864) - (x0 * -111.77007))) * x1) + 6710.6445) - (((187.74515 / (x0 + -49.034428)) + ((x0 * 40.12534) - 356.91183)) * ((x0 * -0.123850346) - x1)))",
                                   "4.4618635 * (((x0 * x0) + 1300.2241) + (5344.361 * x1))",
                                   "(x0 * (x0 * 4.5007596)) + ((x0 * sqrt(((x0 * -156.36989) - -8913.087) * (x1 * (x0 * 5.7209215)))) + 5737.5063)",
                                   "abs(((10134.515 - (-105136.34 / (((x0 * x1) * -71.2271) + 3487.6667))) + (sqrt((x1 * ((x0 * -797.6506) - -45484.324)) * x0) * x0)) + (x0 * (((x0 / 64.69172) - 0.4918766) * 474.0315)))",
                                   "((x0 * x0) * 4.461825) + (5801.8154 - (x1 * -23841.127))",
                                   "((x0 + -60.019283) * (((-2.311972 - (((x1 + (x0 * 0.0013593079)) * x0) + -12.038117)) * x0) + 154.36133)) + (21927.205 - x0)",
                                   "(((x0 - (x1 * -745.8761)) * ((5.2976646 * (x0 + (2.0108013 / (x0 + -49.18983)))) + -60.040195)) + 6810.512) - (((x0 * 48.279488) + (x0 / (x0 + -56.91308))) * (x1 * x0))",
                                   "(((x0 * x0) + (x1 * 5343.2173)) * 4.4620075) + 5801.259",
                                   "((x0 + x0) * ((x1 * 394.12094) + ((x0 + 30.049414) + x0))) - ((((-23594.176 / (x0 + -57.05085)) * x1) / (x0 + -48.944515)) + -4140.1733)",
                                   "((x0 + x0) * (x0 + ((x0 + (x1 * 412.69315)) + 32.549618))) - (abs(((19670.08 - ((x1 * -24250.232) / (x0 + -48.94263))) * (x1 + 0.056072928)) / ((x0 - x1) + -56.399216)) + -4119.1543)",
                                   "(x0 * ((((60.058094 - x0) * x1) + 4.471836) * x0)) + 5784.7036",
                                   "(7.9992895 / ((-49.008644 / x0) + x1)) + ((((x1 * (61.78347 - x0)) + 4.4769154) * ((x0 * x0) - sqrt(x0))) + (5805.961 + 2.3115187))",
                                   "(-204.0637 / (x1 + (-48.734478 / x0))) + (5688.796 + ((x0 * (x0 - (((x1 - -0.36854094) / 0.07650976) / (-49.80204 + (0.8969855 * x0))))) * (((60.38101 - x0) * x1) + 4.3995757)))"]

real_estate_valuation_cleaned = ["(10.5945 - log(x0)) * abs((10.148103 / (226.9491 - (x0 - (x2 * sqrt(x1))))) - 8.906102)",
                                 "(10.125769 - log(x0 + 125.88969)) * (10.844096 - (5.4079165 / ((((x1 * (x1 * 1.1390723)) + x2) - x0) + 226.15132)))",
                                 "(10.013546 - log(x0 - -134.32716)) * (11.308279 - ((222.81113 / (sqrt(x0 * x1) - 12.098675)) / (222.81113 - (x0 - (x2 + (x1 * (x1 * 1.2235945)))))))",
                                 "abs((x0 * 0.0065826345) + (((x2 + -24.821985) * 287.63327) - sqrt(x0 - x1))) + 16.60192",
                                 "abs((((x2 + -24.836687) * 290.7846) + (x0 * 0.007439625)) + (sqrt(x1) - sqrt(abs((x2 - x0) + (-0.26225805 + x2))))) + 16.613281",
                                 "(abs((x0 / (3549.728 / x2)) + (-8.134051 - (x2 / ((x2 * -11.084844) + ((x2 + x0) - x1))))) + ((x0 * -0.009621011) - (-13.443655 - x2))) + (x1 * 0.6905915)",
                                 "(abs(x1 - (x2 / (252.89444 - x0))) + (log(x0) * -6.923097)) + 77.84776",
                                 "(log((x0 + x2) + x1) * -7.190042) + (80.048805 + abs(x1 + (x2 / (x0 - 252.88217))))",
                                 "(((sqrt(x0) * -0.8249109) + (abs((x2 / (x0 - 252.88217)) + x1) + (x0 * 0.0052266666))) + 50.015785) + (8.655481 / abs((x0 * 0.20484886) + (x2 / -0.41369843)))",
                                 "((x1 / sqrt(abs((x0 / 11.753085) - x2))) + 51.631695) - (sqrt(x0) * 0.54306334)",
                                 "(43.53046 - (sqrt(x0) * 0.4109671)) + (sqrt(abs(-33.60647 / ((x1 * 0.8354692) + (x2 - (x0 / 9.784146))))) + x1)",
                                 "((log((x1 + (x1 + x2)) / sqrt(x0 + 36.226406)) * (x2 * 0.54015136)) + sqrt(abs(36.226406 / ((x1 * 0.8351845) + (x2 - (x0 / 9.78392)))))) + 32.617477",
                                 "((((sqrt(sqrt(sqrt(x0))) * (x1 + -291.05826)) + 931.42725) * (x2 + -24.87423)) + (10.29645 / (x0 + -252.43143))) + 10.042348",
                                 "(((((sqrt(x1) * 0.0051850276) + -24.888891) + x2) * ((sqrt(sqrt(sqrt(x0))) * -291.07874) + 932.55286)) + 12.000514) + (10.297009 / (x0 + -252.44061))",
                                 "(((sqrt(sqrt(sqrt(x0))) * -291.07874) + 932.55286) * (((sqrt(abs(x1 + -0.98401105)) * 0.006025951) + x2) + -24.889984)) + ((10.297027 / (x0 + -252.43999)) + 12.0005045)",
                                 "((x0 * (log(abs((x2 / -0.09887711) + x0)) / ((x0 + (x2 * x1)) * 1.4057544))) * -6.4701767) + (x2 + 34.85022)",
                                 "(((x0 * -6.4571333) / ((x0 * 1.3565382) + (x1 * x2))) * log(abs((x0 + (x2 / -0.0998844)) + (x1 * (-1.547157 - x1))))) + (x2 + 35.796715)",
                                 "((((x0 / (((sqrt(x0) + x0) + (x1 * (x2 - x1))) * 1.3562574)) * -6.4571333) * log(abs((x1 * (-1.5471572 - x1)) + (x0 + (x2 / -0.0998844))))) + x2) + 35.184704",
                                 "(((log(x0) * -2.7738554) + ((31.63934 / (((x0 * 0.6049613) * x1) + -151.5553)) + 31.63934)) * (x2 + -24.863873)) * 25.524487",
                                 "((x2 * (((x1 * x2) / (((x0 * x1) * 0.6039732) + -151.55547)) + ((log(x2 + x0) * -2.7738388) + 31.572744))) + x1) * (x2 + -24.862206)",
                                 "((((abs(1.4680742 / ((x0 * 0.6588232) - 194.14922)) + (31.546865 / (((x1 * 0.60476726) * x0) + -151.5553))) * x1) + (log(x0) * -2.7738554)) + 31.546865) * ((x2 + -24.863873) * 24.863441)",
                                 "(x2 + ((-970.70966 - log(x0 + x2)) * 0.025422024)) * (x1 + 293.4834)",
                                 "(((((x2 * 0.41877797) * x2) + -248.53302) - log((2.133075 * (x2 - x1)) + x0)) * 7.4713707) - (log(abs(x0 + -292.99783)) / 0.74845827)",
                                 "(((x2 * (0.41877797 * x2)) + (-248.53302 - log((((x2 - x1) - x1) * 2.133075) + (x0 + x2)))) * 7.4713707) - (log(abs(x0 + -292.99783)) / 0.74845827)",
                                 "((x2 - 24.874815) / (sqrt(x0 + (422.61316 - x1)) / 10335.175)) + 7.362909",
                                 "(((x2 - 24.879938) / (sqrt(x0 + 424.50092) / 10335.174)) + 7.401028) + sqrt(abs(x1 - 0.7633228))",
                                 "(54.25469 / (((x0 / (((x1 * 2.6435697) + x2) * x2)) + (15.40142 / ((x2 * 10.281407) - ((x0 * x1) + 17.374325)))) + 1.3216639)) + 12.111359",
                                 "((x2 * 287.1612) - (log(sqrt(x0)) * ((x1 / (x0 + -320.0921)) + 14.92632))) + -7084.3955",
                                 "-7025.753 + (((x2 + (0.81631863 / (x2 + ((x1 * x0) + -274.27847)))) * 284.73352) - (log(sqrt(x0)) * 14.38448))",
                                 "(x1 * ((127.611916 / ((x2 + -275.74283) + (x1 * x0))) + 0.37873656)) + (((x2 * 284.4465) - (log(sqrt(x0)) * 12.759064)) + -7025.7886)"]

real_estate_valuation_cleaned_denoised = ["((x2 + sqrt(x1)) / (((x0 / 76.19954) + 15.160766) / x2)) + 9.870667",
                                          "(sqrt(x1) - ((x2 - x1) / (x0 / x2))) + (abs(1.5193005 / ((x0 / 77.16809) + -3.9066308)) + ((log(sqrt(x0)) * -17.953451) - -93.53244))",
                                          "(-18.824116 * log(sqrt(x0))) + (((1.5393171 / abs((x0 / 78.023575) + -3.8653708)) + ((-6.1950026 / ((((x0 - x1) - x1) / x2) + -39.36966)) - -97.9589)) - ((x2 / x0) * (x2 - x1)))",
                                          "(abs(sqrt((x0 + 970.46747) - x1) + -45.52291) + ((x0 * -0.009964266) - 4039.8826)) + (x2 * 163.33607)",
                                          "((x2 * 180.58743) + abs((sqrt(x0 + 1147.5697) + -46.883373) - log(abs(x1 + -0.73848975)))) - ((x0 * 0.009869627) + 4470.945)",
                                          "(abs(47.17634 - (sqrt((x0 + 1199.0543) - x1) + -0.6047686)) + (-363.95456 - ((((x0 - (x2 * 6.8623815)) * 119.93006) + (x0 * -119.366646)) / 50.701115))) - abs(log(abs(log(abs(log(x0) + -6.1343193)))) + 0.29912597)",
                                          "((69.64866 - (x0 * -0.007185499)) + (-1.7608042 * log(abs((x0 + x0) + (-23.4422 * x2))))) - sqrt(x0 - x1)",
                                          "(x0 * 0.00677673) + (((sqrt(x1) + 63.956436) - (sqrt(x0 - x1) - sqrt(sqrt(x0)))) + (log(abs((x2 * -23.428009) + (x0 + x0))) * -1.9000943))",
                                          "(log(abs(((x0 + x0) + (-1.8982239 / (x1 + -1.0231004))) + (x2 * -23.517406))) * -1.8372653) + ((abs((x0 * 0.0066596013) - 1.1313422) + (sqrt(x1) - (sqrt(x0) - sqrt(sqrt(x0))))) + 64.84444)",
                                          "abs((1082.054 / (sqrt(x0 + 1083.6381) + -13.060101)) + (((-2.3878558 / ((x1 - (x0 / 1081.8218)) + 1.1976328)) * x2) / abs(x2 + (x2 + (x2 * (-319.9551 / x0)))))) + (109.486046 / abs(x0 + -301.6718))",
                                          "abs((((x2 / ((1.1977444 - (x0 / 1081.8717)) + sqrt(x1))) * -2.7524488) / sqrt(abs(x0 + (x0 + -319.5723)))) + ((1081.9529 / (sqrt(x0 + 1081.9197) + -13.278777)) + abs((106.79292 / ((-319.5723 + sqrt(x0)) + x0)) + -1.0328791)))",
                                          "abs((106.774216 / ((sqrt(x0) + x0) + -319.7316)) + -0.9900745) + abs((1081.8544 / (sqrt(x0 + 1081.9238) + -13.044387)) + (((x2 * -2.5484977) / ((1.197661 - (x0 / 1081.8544)) + x1)) / (sqrt(abs((x0 + x0) + -319.7316)) + -1.2754087)))",
                                          "sqrt(x1) + (1239.1029 / sqrt((x2 * x2) + abs(-96.5089 + x0)))",
                                          "(abs(3.3677711 / (17.357382 - sqrt(x0))) - (sqrt(x0 - x1) - abs(x2 / (sqrt(x0) - 57.460884)))) + ((x0 * 0.0051562125) + 57.9691)",
                                          "(abs(log(x2) / (sqrt(x0) - 17.352015)) + ((54.446365 + (x0 * 0.005591781)) - (-1.6124454 * (sqrt(x1) + (x1 / (x0 - x2)))))) - (sqrt(x0) - abs(32.19111 / (57.64201 - sqrt(x0))))",
                                          "((11.313104 - sqrt(sqrt(x0))) / 0.1787225) + (sqrt(x1) + abs(-128.56793 / ((x2 / -0.082933396) + x0)))",
                                          "(x1 * 0.52153593) + (((11.150588 - sqrt(sqrt(x0))) / 0.17560516) + abs(-126.41088 / (x0 + ((x2 / -0.08296521) - (11.150588 / (x1 + -1.2698815))))))",
                                          "(x1 + ((10.683345 - sqrt(sqrt(x0))) / 0.17233044)) + abs(((35.34695 / (61.750633 - sqrt(x0))) / (sqrt(sqrt(x0)) - (63.58363 - sqrt(x0)))) - (105.967125 / (x0 + ((x2 / 0.14605172) / -0.5671313))))",
                                          "(((x2 + -24.549294) * (x1 + 136.61789)) + (x0 * 0.006714754)) - sqrt(x0)",
                                          "((-553.15247 - (sqrt(sqrt(x0)) * 4.8735867)) + (x2 * x2)) - log(abs((3.5708303 - (x0 / (x1 + 76.05498))) * x0))",
                                          "((log(abs(((x2 + x1) / sqrt(x0)) - 0.7336131)) * 1.3243687) - (sqrt(x2) * sqrt(sqrt(x0)))) + ((-557.78033 - log(abs((x0 / (x1 + 67.71632)) - 3.9746916))) + (x2 * x2))",
                                          "((log(abs(x0 - (x1 * 9.181612))) + log(abs((x2 * -11.794842) + (x0 - x1)))) * -3.7584074) + 82.30497",
                                          "abs(((log(abs(x0 + -300.52344)) + log(x0)) * -4.0445075) + (86.99381 - (12.811398 / ((x2 - sqrt(x0 * 0.48165002)) - (x1 / -0.025949053)))))",
                                          "(((log(abs(x0 + -300.0951)) + log(abs((x1 * (-0.32076278 + x1)) - x0))) * -3.8530252) + 83.31702) - (8.974651 / (x2 - (sqrt(x0 * 0.46901566) - (x1 / -0.17112085))))",
                                          "(x2 + -24.727827) * ((5453.7593 / sqrt(x0 + 619.98096)) + x1)",
                                          "(123.82437 / abs(x0 - 301.39487)) + ((x2 * 3.8184247) - (sqrt(sqrt(sqrt(x0))) * (27.03878 - (x1 * 0.2076971))))",
                                          "(67.70164 - (sqrt(sqrt(x0 - x1) + (x0 / ((x2 * 118.79331) - x0))) * 6.243497)) + sqrt(x1 * abs((132.20804 / (((x1 / 0.13400963) + (x2 * 9.823286)) - x0)) + -0.15974697))",
                                          "((x1 + 482.038) + (log(x0 + 109.81066) * -46.709385)) * (x2 - 24.755575)",
                                          "(((x2 - 24.413403) * 157.23222) + (log(x0) * -7.2581897)) - ((log(abs((-6278.9863 / x0) + 21.40387)) * 1.9557607) + (x1 * -0.32062677))",
                                          "(((x2 - 24.233107) * 125.591866) + ((log(x0) * -7.546653) - (log(abs(37.024178 + (x2 * (-433.8133 / x0)))) * 1.9360182))) - (x0 * (0.4699214 / abs(x1 + (-1092.4924 + x0))))"]

real_estate_valuation_cleaned_syn = ["((x2 * (369.11328 - (log(x0) * 0.2700881))) + sqrt(x1)) + -9136.518",
                                     "(x1 * 0.51192826) + ((((x2 * ((2.696312 / (x0 + -5290.5137)) + x2)) - log(x0)) * 7.0265675) + -4299.5054)",
                                     "(((((41.27937 / (x0 + -5292.4614)) - log(x0)) + ((x1 * 0.06042432) + (x2 * x2))) * 7.0368347) + -4305.5796) - (x1 / (41.27937 - (((x0 + x1) + x2) * 0.30809605)))",
                                     "((x2 - (-47.773464 / (x0 + 477.30246))) + -24.90163) * (x1 + 338.87674)",
                                     "((x2 - 24.93178) * (333.17923 + x1)) + sqrt((x0 / (-6604.985 - (x0 * -1.2473247))) + (785.4169 / (((x0 / 58.92668) + 4.993173) / 12.904316)))",
                                     "(sqrt(((785.18787 / (((x0 / 58.92668) + 5.676416) / 13.241441)) + x2) + (x0 / ((x2 * -264.87344) - (x0 * -1.2488981)))) + ((x1 + -1.1175492) * 0.50083524)) + ((x2 - 24.93638) * 332.79034)",
                                     "((x2 + -24.734892) * (x1 + 348.6008)) - (log(x0) * 6.8672843)",
                                     "((x2 + (x2 + x2)) + (-74.1899 - (log(x0) * 0.060642894))) * (((x2 * 4.514372) + (x2 / (sqrt(x0) + -72.718185))) + x1)",
                                     "abs((((x2 + sqrt(x1)) * ((((x2 + (x2 + x2)) + -73.97791) - (log(x0) * 0.05631255)) * 4.1085005)) - x2) - ((log(x0) / (sqrt(x0) + -72.71003)) + (x2 / ((x2 + 73.9763) - x0))))",
                                     "(((516.61676 / sqrt(x0 + 212.94417)) + -8946.543) + x1) - (x2 * -358.9363)",
                                     "((x2 * (x2 - log(sqrt(sqrt(log(x0 + x2)))))) * 7.508119) + ((sqrt(x1) + (-7.5402393 / (72.683716 - sqrt(x0)))) + -4557.335)",
                                     "(7.5090322 * (x2 * (x2 - log(sqrt(sqrt(log(x0 + x2))))))) + ((-7.5402393 / (72.68368 - sqrt(x0))) + (-4558.011 - (x1 * ((4.2861176 / (x2 - (x0 - 73.28578))) + -0.44561467))))",
                                     "((x2 * 350.49423) + ((log(x0) * -5.905657) + -8679.61)) + x1",
                                     "((((x2 * 64.3661) + (sqrt(x1) * 0.40677515)) + -1603.0016) * 5.3432484) + abs((log(x0) * 7.0592456) + -56.972633)",
                                     "(-5.2817683 / (-72.83115 + sqrt(x0))) + (abs((log(x2 + x0) * (8.210685 - (x1 / (x2 + -0.19001395)))) + -68.05855) + (((x2 * 64.36141) + -1602.9496) * 5.4324403))",
                                     "((x1 + (x0 * 0.008422667)) - (sqrt(x0) + 8618.401)) + (x2 * 347.311)",
                                     "((log(x0) * -5.8636484) + ((-24.769316 / (x2 - ((x0 * (3.0094814 - x1)) - x2))) + x1)) - (-358.09244 * (x2 + -24.769316))",
                                     "(((x2 * -0.2771624) * log(x0 + 13.683081)) + abs((x1 * 0.6036047) + (4723.4463 / ((x2 * 187.22668) + ((3.035364 - x1) * (x0 * -25.228497)))))) - ((x2 + -24.745213) * -357.3668)",
                                     "((x1 / abs(17.929348 - (x0 / (319.35318 - x2)))) + 9.258843) * (log(319.35318 / x0) + 4.6133127)",
                                     "((8.249633 * (4.7432623 + log(339.3885 / x0))) - ((x1 / ((x0 / (x2 - 319.34753)) + 17.955776)) + (0.7162208 / (x1 - sqrt(x0))))) + (x1 / 1.2029268)",
                                     "(((((-19.385406 / ((x1 * x1) - x0)) + x1) / abs(1.5039012)) - (log(x2) / (17.954199 + (x0 / (x2 - 319.34744))))) + (8.249614 * (log(360.5718 / (x0 + x1)) + 4.743226))) / 0.9866659",
                                     "(((x1 + 382.97125) / log(x0 + 119.59769)) + (x2 * 358.2108)) + -8964.55",
                                     "((((384.50793 - (-28.53142 / (((x0 + x0) + (-423.5023 * x2)) * 0.38339838))) * x2) + ((x1 + -226.61482) / (x2 / log(x0)))) + -9498.0205) * 0.8443738",
                                     "((((x2 * 384.48856) + -9498.529) + ((x1 + -225.73952) / (x2 / log(x0)))) * 0.8531763) - ((-28.537428 / (((x2 * -423.22522) + (x0 + x0)) / sqrt(x0))) - (x1 / ((x1 - sqrt(x0)) / -0.0610893)))",
                                     "(x1 + ((x0 * 0.008422113) + ((x2 - 24.814571) * 347.13324))) - sqrt(x0)",
                                     "((x2 - 24.814735) * 372.47314) + ((sqrt(x1) - sqrt(x0)) + (((24.06442 / (sqrt(log(x0)) - (x1 + -0.073689535))) + x0) * 0.007104894))",
                                     "(((x2 - 24.814566) * 373.00464) - sqrt(x0)) + ((abs(((x1 * x1) / (x2 - 24.814566)) + (-24.554928 / (sqrt(log(x0)) - (-0.07367702 + x1)))) + (x0 + (x0 / (sqrt(x0) - x1)))) * 0.007261431)",
                                     "(abs(log(3190.0667 / x0) * 6.4883785) + ((24.901594 - x2) * -341.10544)) + x1",
                                     "((((-314.5987 / ((418.38342 * x2) - (x0 / 0.50550914))) + -7.5344586) * log(x0)) + ((x2 - 24.699059) * 314.59344)) + sqrt(x1)",
                                     "(((-314.5987 / ((418.3977 * x2) - (x0 / 0.50549805))) + -7.5429764) * log(x0 + x2)) + (((24.699614 - x2) * ((x1 / -0.46049836) - 314.72757)) - (x1 / (((418.3977 - x0) / 0.50551003) - x2)))"]

real_estate_valuation_cleaned_syn_denoised = ["(x1 + 50.67437) * ((log(x0) * (x2 - 25.08254)) + 1.4280761)",
                                              "abs((log(x0) * -10.10153) + 82.56337) + (((x1 + x2) * log(x0)) * ((x2 + x2) - 49.827904))",
                                              "((x1 * 0.39906988) + x2) * (((x2 + (x2 - 50.209843)) * abs(log((x1 * log(x2)) + x0))) + ((23.244347 / ((x0 - ((x2 * x2) * log(x0))) + 56.3686)) + 3.1994183))",
                                              "(x1 + (((-561.0245 / (-481.84613 - x0)) + 338.47598) * x2)) + -8430.561",
                                              "((x1 * 0.54159313) + -8100.5913) + (x2 * (((34.03533 / (5305.5786 - x0)) + (-590.1269 / (-440.67303 - x0))) + 325.27652))",
                                              "((((-590.22815 / (-439.9309 - x0)) + ((-0.025600351 / (x1 - sqrt(x0))) + 325.1955)) + (x2 / (5302.9917 - x0))) * x2) + (((2.0885894 - (x2 / x0)) * sqrt(x1)) + -8100.255)",
                                              "((15357.636 / (x0 + 530.07434)) + (x2 * 346.97134)) + (x1 + -8643.19)",
                                              "((((13000.516 / (x0 + 397.0125)) + (x2 * 365.03854)) + sqrt(x1 * 4.993879)) + -9092.938) * 0.97064817",
                                              "(((x1 * 0.49809065) + (x2 * 354.8656)) + -8837.956) - ((-0.35547414 / ((x0 * -0.0047139237) + x2)) - (((x2 * 20.0589) / (x0 + 375.8717)) * (x2 - log(0.738738))))",
                                              "((x1 + -8679.872) + (log(x0) * -5.9075923)) + (x2 * 350.50507)",
                                              "(-8976.239 + (((log(x0) * -0.2702444) + 362.70193) * x2)) + ((5.2133093 / (sqrt(x0) - 72.71239)) + ((x1 * 0.47962496) - 0.53810173))",
                                              "(5.2133064 / (sqrt(x0) - 72.713005)) + ((-9140.025 + (sqrt(sqrt(((1.1704899 * x1) + x2) / (x0 - (x2 * -5.14123)))) * 79.62963)) - (x2 * ((0.025120908 / (x1 - sqrt(x0))) - 366.1644)))",
                                              "((x2 + -24.746664) * 360.21738) + (sqrt(x1) + (log(x0) * -6.7783957))",
                                              "(((((-253.62701 - (x2 * -10.27763)) - sqrt(log(x0))) * 32.96991) + x1) + 18.331642) - log(abs(sqrt(sqrt(log(x0))) + (x1 * -0.5704046)))",
                                              "((((-253.62701 - (x2 * -10.277631)) - sqrt(log(x0))) * 33.049625) + x1) + (18.10957 - (log(abs(sqrt(sqrt(log(x0))) + (x1 * -0.57040447))) * abs(sqrt(sqrt(x0)) + -4.641761)))",
                                              "((x2 * 349.81363) + ((log(x0) * -5.906667) + x1)) + -8662.613",
                                              "((((0.59800524 - (-147.45294 / (-8500.573 - (x0 * -1.606118)))) * x1) + -8807.701) + (x2 * 355.9596)) + (log(x0 + x1) * -6.917684)",
                                              "(((x2 * 355.95956) + -8807.482) + abs(((log(x0) / ((x0 + 1.2825842) - (x1 * x1))) + (0.46790323 - (146.94081 / ((x0 * -1.6060936) - -8500.573)))) * x1)) + (log(x0) * -6.9108734)",
                                              "(x2 - ((-50.02603 / (x0 + 538.39825)) + 24.906443)) * (x1 + 357.65735)",
                                              "(1.4687767 / (24.868675 - sqrt(x0 / log(x0)))) + ((x2 - 24.869007) * (x1 + (1235.7604 / log((x0 / 34.819126) + 8.676176))))",
                                              "(((x1 - ((x2 - 24.828712) * -1236.3293)) / log((x0 / x2) + 16.08468)) + (-7.247809 - (0.8674449 / (sqrt((x0 + 45.524372) / log(x0)) - x2)))) - log(25.934252 - (x1 * 2.5594897))",
                                              "((log(x0) * ((x2 * 52.73629) + -1322.7667)) + x1) + 72.69539",
                                              "(log(x0) * ((x2 * 52.65987) + ((x0 * 0.000210464) + -1322.9695))) + ((sqrt(x1) * 2.178391) + 84.83615)",
                                              "(0.8494712 / (x2 - sqrt((x0 / log(x0)) + 5.309679))) + (((((x2 * -129.35646) + 3136.5225) - sqrt(x1)) * log(log(log(x0 + 68.32743)) / (x2 + -3.404802))) + -195.08778)",
                                              "(x1 + ((log(x0) - (x2 * x2)) * -6.259187)) + -3828.193",
                                              "(0.8474983 / (((x0 / x2) / x2) - 8.48561)) - ((sqrt((x2 * x2) - log(x0)) * -354.47076) + (8768.773 - sqrt(x1)))",
                                              "(0.8474983 / ((x0 / (x2 * x2)) - 8.48561)) + ((x1 - ((-354.47076 * sqrt((x2 * x2) - log(x0))) + 8769.331)) - ((-0.5427306 / ((0.38266653 - x2) + (x0 / x2))) + (x1 / 2.310759)))"]


# ───────────────────────────── LOGGING SET-UP ────────────────────────────────
DEBUG_MODE = True          # ← flip to True for per-equation debugging

logging.basicConfig(
    level=logging.DEBUG if DEBUG_MODE else logging.INFO,
    format="%(levelname)s: %(message)s",
    handlers=[logging.StreamHandler()],
)
LOGGER = logging.getLogger("sr_batch_eval")

# ─────────────────────────── 1️⃣  CONSTANTS / CONFIG ─────────────────────────
SCRIPT_DIR = pathlib.Path(__file__).resolve().parent
CSV_DIR   = (SCRIPT_DIR / "data").resolve()          # CSVs live right here
OUT_CSV   = pathlib.Path("sr_ksc_results.csv")

VARIATIONS: Tuple[str, ...] = ("", "_syn", "_denoised", "_syn_denoised")

# --- helper to map yes/no into 0/1 when a column is textual ------------------
def _map_binary(series: pd.Series) -> pd.Series:
    lower = series.astype(str).str.lower()
    if set(lower.unique()) <= {"yes", "no"}:
        return lower.map({"no": 0, "yes": 1}).astype("int64")
    return series

PreProc = Callable[[pd.DataFrame], pd.DataFrame] | None

# --- base-dataset meta:  predictors • target • renoise-kwargs • pre-processor
BASE_INFO: Dict[str, Tuple[List[str], str, Dict, PreProc]] = {
    "air_quality_cleaned": (
        ["AH", "PT08.S4(NO2)", "RH"],
        "T",
        dict(method="stratified", seed=42, clip_lower=0,
             clip_upper=None, tail_replace=True, lower_percentile=50),
        None,
    ),
    "insurance_original": (
        ["age", "smoker"],
        "charges",
        dict(method="stratified", seed=42, clip_lower=0,
             clip_upper=None, tail_replace=True, lower_percentile=50),
        lambda df: df.assign(smoker=_map_binary(df["smoker"])),
    ),
    "customer_churn": (
        ["Distinct Called Numbers", "Frequency of SMS",
         "Frequency of use", "Seconds of Use"],
        "Customer Value",
        dict(method="stratified", seed=42, clip_lower=0,
             clip_upper=None, tail_replace=True, lower_percentile=50),
        None,
    ),
    "credit_score_cleaned": (
        ["Credit_History_Age", "Delay_from_due_date", "Num_Bank_Accounts",
         "Num_Credit_Inquiries", "Num_of_Delayed_Payment", "Outstanding_Debt"],
        "Interest_Rate",
        dict(method="stratified", seed=42, clip_lower=0,
             clip_upper=None, tail_replace=True, lower_percentile=50),
        None,
    ),
    "real_estate_valuation_cleaned": (
        ["X2 distance MRT station", "X3 number convenience stores", "X4 lat"],
        "X6 price",
        dict(method="stratified", seed=42, clip_lower=0,
             clip_upper=None, tail_replace=True, lower_percentile=50),
        None,
    ),
}

CSV_NAME_FMT = "{stem}{suffix}.csv"

# special rule: for *plain* air_quality we ignore the middle predictor
DROP_TO_KEEP_X0_X2: Dict[Tuple[str, str], List[int]] = {
    ("air_quality_cleaned", ""): [0, 2],
}

# ──────────────────────── 2️⃣  SMALL UTILITIES ───────────────────────────────
def mean_ci(vals: Sequence[float], ci: float = 0.95):
    arr = pd.Series(vals).dropna().to_numpy(float)
    if arr.size == 0:
        return math.nan, math.nan, math.nan
    m = arr.mean()
    if arr.size == 1:
        return m, m, m
    sem = stats.sem(arr, nan_policy="omit")
    h   = sem * stats.t.ppf((1 + ci) / 2.0, arr.size - 1)
    return m, m - h, m + h

def _as_1d_float(obj):
    arr = np.asarray(obj, dtype="float64").ravel()
    return arr

def ks_score(y_true, y_pred):
    return KSComplement.compute(
        real_data=_as_1d_float(y_true),
        synthetic_data=_as_1d_float(y_pred),
    )

def _fmt(mean, lo, hi) -> str:
    """Return “99.12% ± 0.34%” (half-CI)."""
    pm = (hi - lo) / 2
    return f"{mean*100:.2f}% ± {pm*100:.2f}%"

# ─────────────────────── 3️⃣  CORE EVALUATION ────────────────────────────────
def evaluate_one(
    stem: str,
    suffix: str,
    *,
    indep_cols: list[str],
    target: str,
    corr_kwargs: dict,
    preproc: PreProc,
):
    """
    Run all 30 equations for <stem><suffix> and return
    the *numeric* aggregates needed later by make_pretty.
    """
    path = CSV_DIR / CSV_NAME_FMT.format(stem=stem, suffix=suffix)
    if not path.is_file():
        raise FileNotFoundError(path)

    df = pd.read_csv(path)
    if preproc:
        df = preproc(df)

    # special subset for plain air_quality_cleaned
    use_idx = DROP_TO_KEEP_X0_X2.get((stem, suffix))
    X = df[indep_cols].to_numpy()
    if use_idx is not None:
        X = X[:, use_idx]
    y = df[target].to_numpy()

    equations: list[str] = globals()[f"{stem}{suffix}"]
    raw_scores, corr_scores = [], []

    for i, expr in enumerate(equations, 1):
        try:
            func = thesis_utils.generate_candidate_function(expr)
            y_raw = func(X)
            raw_scores.append(ks_score(y, y_raw))

            y_corr, *_ = thesis_utils.renoise_predictions(
                y=y, y_denoised=y_raw, **corr_kwargs
            )
            corr_scores.append(ks_score(y, y_corr))

        except Exception as err:
            LOGGER.error("%s%s – eq#%02d failed: %s", stem, suffix, i, err)
            if DEBUG_MODE:
                LOGGER.debug("   expr: %s", expr)
            continue

    # aggregate ---------------------------------------------------------------
    m_r, lo_r, hi_r = mean_ci(raw_scores)
    m_c, lo_c, hi_c = mean_ci(corr_scores)

    LOGGER.info(
        "  ✔ %-24s | raw %s • corr %s",
        stem + suffix,
        _fmt(m_r, lo_r, hi_r),
        _fmt(m_c, lo_c, hi_c),
    )

    return {
        "dataset": stem,
        "variation": suffix or "SR only",
        "raw_mean": m_r,
        "raw_ci_low": lo_r,
        "raw_ci_high": hi_r,
        "corr_mean": m_c,
        "corr_ci_low": lo_c,
        "corr_ci_high": hi_c,
    }


# ─────────────────────── 4️⃣  PRETTY PRINT TABLE ─────────────────────────────
_VARIATION_LABEL = {
    "SR only":                   "(a) SR only",
    "_denoised":                 "(b) Denoising + SR",
    "_syn":                      "(c) Copula + SR",
    "_syn_denoised":             "(d) Copula + Denoising + SR",
}

_VARIATION_ORDER = [
    "(a) SR only",
    "(b) Denoising + SR",
    "(c) Copula + SR",
    "(d) Copula + Denoising + SR",
]


def _fmt(mean: float, lo: float, hi: float) -> str:
    pm = (hi - lo) / 2            # half-width of CI
    return f"{mean*100:.2f}% ± {pm*100:.2f}%"


def make_pretty(rows: list[dict]) -> pd.DataFrame:
    """
    Produce a wide table with

        rows   → Dataset  ×  Metric   (Raw / Corrected)
        cols   → the four processing variants, in fixed order
        cells  → '98.96% ± 0.69%' strings
    """
    tidy = []
    for r in rows:
        var_label = _VARIATION_LABEL[r["variation"]]
        tidy.extend(
            [
                {
                    "Dataset": r["dataset"],
                    "Metric": "Raw KSCompl.",
                    "Variant": var_label,
                    "Value": _fmt(r["raw_mean"], r["raw_ci_low"], r["raw_ci_high"]),
                },
                {
                    "Dataset": r["dataset"],
                    "Metric": "Corrected KSCompl.",
                    "Variant": var_label,
                    "Value": _fmt(r["corr_mean"], r["corr_ci_low"], r["corr_ci_high"]),
                },
            ]
        )

    df = pd.DataFrame(tidy)

    wide = (
        df.pivot(index=["Dataset", "Metric"], columns="Variant", values="Value")
          .reindex(columns=_VARIATION_ORDER)          # enforce column order
          .sort_index(level=0)                        # keep datasets grouped
    )

    # Cosmetic: drop the pivot-generated names
    wide.index.names  = [None, None]
    wide.columns.name = None
    return wide
# ───────────────────────── 5️⃣  MAIN LOOP ─────────────────────────────────────
if __name__ == "__main__":
    t0 = time.time()
    results: List[Dict] = []

    for stem, (indep, target, kw, pre) in BASE_INFO.items():
        for sfx in VARIATIONS:
            LOGGER.info("Evaluating %s%s", stem, sfx)
            results.append(
                evaluate_one(stem, sfx,
                             indep_cols=indep,
                             target=target,
                             corr_kwargs=kw,
                             preproc=pre)
            )

    table = make_pretty(results)
    table.to_csv(OUT_CSV, index=True)
    LOGGER.info("CSV saved → %s", OUT_CSV.resolve())

    pd.set_option("display.width", 250)
    print("\nRESULT TABLE\n------------")
    print(table)
    LOGGER.info("Finished in %.1f s", time.time() - t0)
